
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура тм_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
		
	ДобавитьВставитьЭлементыНаФорму();
	
	ДобавитьКоманды();
	
	//Блокировка документа от ввода данных
	ЗаблокироватьРазблокироватьДокумент();
	
	тм_ОбщегоНазначенияВызовСервера.ВывестиЗакупочныеЦены(Объект.Запасы);
	тм_ОбщегоНазначенияВызовСервера.ВывестиПроизводителя(Объект.Запасы);
	
КонецПроцедуры

&НаКлиенте
Процедура тм_ПередЗаписьюПеред(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение 
		И Объект.тм_СостояниеРасходнойНакладной <> ПредопределенноеЗначение("Перечисление.тм_СостояниеРасходнойНакладной.Завершен") Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(, "Проведение документа возможно только при установке состояния ""Завершен""");
	ИначеЕсли ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись 
		И Объект.тм_СостояниеРасходнойНакладной = ПредопределенноеЗначение("Перечисление.тм_СостояниеРасходнойНакладной.Завершен") Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(, "Запись документа со статусом ""Завершен"" запрещена. ");	
	//ИначеЕсли ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись И Объект.тм_СостояниеРасходнойНакладной = ПредопределенноеЗначение("Перечисление.тм_СостояниеРасходнойНакладной.ПустаяСсылка") Тогда
	//	Отказ = Истина;
	//	ПоказатьПредупреждение(, "Статус не должен быть пустым!");			
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура тм_ПередЗаписьюНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Избавит от лишних блокировок формы
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("тм_ЭтоНовыйДокумент", Истина);
	КонецЕсли; 	

КонецПроцедуры

&НаСервере
Процедура тм_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("тм_ЭтоНовыйДокумент") Тогда
		ЗаблокироватьРазблокироватьДокумент();
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура тм_ПриЗакрытииПосле(ЗавершениеРаботы)
		
	//Разблокировка документа от ввода данных
	ЗаблокироватьРазблокироватьДокумент(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура тм_ЗапасыНоменклатураПриИзмененииПосле(Элемент)
	
	Номенклатура = Элементы.Запасы.ТекущиеДанные.Номенклатура;
	Если Не Номенклатура.Пустая() Тогда                                        
		тм_ОбщегоНазначенияВызовСервера.ВывестиЗакупочнуюЦенуПриИзмененииНоменклатуры(Элементы.Запасы.ТекущиеДанные.тм_ЗакупочнаяЦена, Номенклатура);	
		тм_ОбщегоНазначенияВызовСервера.ВывестиПроизводителя(Номенклатура, Элементы.Запасы.ТекущиеДанные.тм_Производитель);
	КонецЕсли; 
	
	УстановитьТекущегоСотрудника();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СписатьБонусы(Команда)
	
	ПараметрыПередачи = Новый Структура;
	ПараметрыПередачи.Вставить("КоличествоДоступныхБонусов", тм_ОбщегоНазначенияВызовСервера.ПолучитьОстатокБонусов(Объект.Контрагент));
	
	Оповещение = Новый ОписаниеОповещения("ПослеСписанияБонусов", ЭтаФорма);
	ОткрытьФорму("ОбщаяФорма.тм_ФормаСписанияБонусов", ПараметрыПередачи,,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьБонусы(Команда)
	
	ОчиститьБонусыНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаблокироватьПросмотрДокумента()

	ЭтотОбъект.ТолькоПросмотр = Истина;
	ЭтотОбъект.КоманднаяПанель.Доступность = Ложь;
	ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ПодменюСоздатьНаОсновании.Доступность = Истина;
	
	ЭлементБонуснаяСистема = Элементы.Найти("БонуснаяСистема");
	Если Не ЭлементБонуснаяСистема = Неопределено Тогда
		Для каждого Элемент Из ЭлементБонуснаяСистема.ПодчиненныеЭлементы Цикл
			Элемент.Доступность = Ложь;
		КонецЦикла;  
	КонецЕсли; 
	
	Сообщить("Документ в состоянии завершен. Редактирование запрещено.");	
	
КонецПроцедуры // ЗаблокироватьПросмотрДокумента()
 
&НаСервере
Процедура ДобавитьВставитьЭлементыНаФорму()
	
	тм_ОбщегоНазначенияВызовСервера.ВставитьЭлементНаФорму(ЭтаФорма, 
		"Состояние",
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		Элементы.ЛеваяКолонка,
		"Объект.тм_СостояниеРасходнойНакладной", Элементы.Склад);	
		
#Область ЗакупочнаяЦена
	
	ДобавляемыеРеквизиты	= Новый Массив;                   
		
    Реквизит_тм_ЗакупочнаяЦена = Новый РеквизитФормы("тм_ЗакупочнаяЦена", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2)), "Объект.Запасы",  "Цена (закупки)");
	
    ДобавляемыеРеквизиты.Добавить(Реквизит_тм_ЗакупочнаяЦена);
	
    ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ЭлементЦенаЗакупки = тм_ОбщегоНазначенияВызовСервера.ВставитьЭлементНаФорму(ЭтаФорма, 
		"ЗакупочнаяЦена",
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		ЭтаФорма.Элементы.Запасы,
		"Объект.Запасы.тм_ЗакупочнаяЦена", Элементы.ЗапасыЦена); 
		
	ЭлементЦенаЗакупки.Заголовок = "Цена (закупки)";	
	ЭлементЦенаЗакупки.Доступность = Ложь;	
#КонецОбласти 
	
#Область БонуснаяСистема
	
	СтраницаБонуснаяСистема = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
		"БонуснаяСистема",
		Тип("ГруппаФормы"),
		ВидГруппыФормы.Страница,
		Элементы.Страницы,
		Неопределено); 
    СтраницаБонуснаяСистема.Заголовок = "Бонусная система";
	
	ИспользованныеБонусы = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
		"тм_ИспользованныеБонусы",
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		СтраницаБонуснаяСистема,
		"Объект.тм_ИспользованныеБонусы"); 	
	ИспользованныеБонусы.Заголовок = "Использованные бонусы";
	ИспользованныеБонусы.Доступность = Ложь;
	
#КонецОбласти 
		
#Область Производитель
	
	ДобавляемыеРеквизиты	= Новый Массив;                   
		
    Реквизит_тм_Производитель = Новый РеквизитФормы("тм_Производитель", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)), "Объект.Запасы",  "Производитель");
	
    ДобавляемыеРеквизиты.Добавить(Реквизит_тм_Производитель);
	
    ИзменитьРеквизиты(ДобавляемыеРеквизиты);		
		
	ЭлементПроизводитель = тм_ОбщегоНазначенияВызовСервера.ВставитьЭлементНаФорму(ЭтаФорма, 
		"Производитель",                                                                                  	
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		ЭтаФорма.Элементы.Запасы,
		"Объект.Запасы.тм_Производитель", Элементы.ЗапасыХарактеристика); 
		
	ЭлементПроизводитель.Заголовок = "Производитель";	
	ЭлементПроизводитель.Доступность = Ложь;	
	
#КонецОбласти 
	
#Область Запасы

	Права = тм_КЭШ.ПолучитьПраваОбъекта("РасходнаяНакладная", Пользователи.ТекущийПользователь());
	Если Права.SA Тогда
		
		Элемент_тм_Сотрудник = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
			"Сотрудник",
			Тип("ПолеФормы"),
			ВидПоляФормы.ПолеВвода,
			ЭтаФорма.Элементы.Запасы,
			"Объект.Запасы.тм_Сотрудник"); 
			
		Элемент_тм_Сотрудник.Заголовок = "Сотрудник";	
		Элемент_тм_Сотрудник.Доступность = Ложь;	
			
	КонецЕсли; 

#КонецОбласти 	
КонецПроцедуры // ДобавитьВставитьЭлементыНаФорму()

&НаСервере
Процедура ДобавитьКоманды()

	#Область БонуснаяСистема
	
	СтраницаБонуснаяСистема = Элементы.Найти("БонуснаяСистема");
	// Создадим команды
    Команда		= ЭтаФорма.Команды.Добавить("СписатьБонусы");
    Команда.Действие	= "СписатьБонусы";
	
    КомандаОчиститьБонусы = ЭтаФорма.Команды.Добавить("ОчиститьБонусы");
    КомандаОчиститьБонусы.Действие = "ОчиститьБонусы";

	
    // Создадим кнопку и привяжем к ней команду    	
	КнопкаСписатьБонусы = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
		"СписатьБонусы",
		Тип("КнопкаФормы"),
		Неопределено,
		СтраницаБонуснаяСистема,
		Неопределено); 	
	КнопкаСписатьБонусы.Заголовок	= "Списать бонусы";
	КнопкаСписатьБонусы.ИмяКоманды	= "СписатьБонусы";
	КнопкаСписатьБонусы.ЦветФона = WebЦвета.Желтый;

	КнопкаОчиститьБонусы = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
		"ОчиститьБонусы",
		Тип("КнопкаФормы"),
		Неопределено,
		СтраницаБонуснаяСистема,
		Неопределено); 	
	КнопкаОчиститьБонусы.Заголовок	= "Очистить бонусы";
	КнопкаОчиститьБонусы.ИмяКоманды	= "ОчиститьБонусы";
	
	#КонецОбласти 

КонецПроцедуры // ДобавитьКоманды()

&НаКлиенте
Процедура ПослеСписанияБонусов(ИспользованныеБонусы, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(ИспользованныеБонусы) = Тип("Неопределено") Тогда
		Возврат;
	КонецЕсли; 
	
	Если ИспользованныеБонусы > Объект.СуммаДокумента Тогда
		Объект.тм_ИспользованныеБонусы = Объект.СуммаДокумента;	
	Иначе
		Объект.тм_ИспользованныеБонусы = ИспользованныеБонусы;		
	КонецЕсли; 

КонецПроцедуры // ПослеСписанияБонусов()
 
&НаСервере
Процедура ОчиститьБонусыНаСервере()
	
	Объект.тм_ИспользованныеБонусы = 0;
	
КонецПроцедуры

&НаСервере
Процедура ЗаблокироватьРазблокироватьДокумент(Заблокировать = Истина)
	
	Успешно = Истина;
	
	тм_ОбщегоНазначенияВызовСервера.ЗаблокироватьРазблокироватьФорму(ЭтаФорма, Заблокировать, Успешно);		
	ЭтаФорма.КоманднаяПанель.Доступность = Успешно;
	
КонецПроцедуры // РазблокироватьДокумент()

&НаСервере
Процедура УстановитьТекущегоСотрудника()

	тм_Сотрудник = ПолучитьТекущегоСотрудникаПользователя();
	Если ЗначениеЗаполнено(тм_Сотрудник) Тогда
		ТекущаяСтрока = Объект.Запасы.НайтиПоИдентификатору(Элементы.Запасы.ТекущаяСтрока);
		ТекущаяСтрока.тм_Сотрудник = тм_Сотрудник;	
	КонецЕсли;  

КонецПроцедуры // УстановитьТекущегоСотрудника()
 
&НаСервереБезКонтекста
Функция ПолучитьТекущегоСотрудникаПользователя()

	Возврат тм_КЭШ.СотрудникПользователя(Пользователи.ТекущийПользователь());

КонецФункции // ПолучитьТекущегоСотрудникаПользователя()
 
#КонецОбласти 