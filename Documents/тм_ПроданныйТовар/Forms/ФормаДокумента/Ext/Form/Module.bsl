
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		ДинамическиеПараметры = Новый Массив;
		ДинамическиеПараметры.Добавить("Отбор:");
		ДинамическиеПараметры.Добавить(Строка(Объект.Склад));
		ДинамическиеПараметры.Добавить(Формат(Объект.ДатаПроданныхТоваров, "ДФ=yyyy-MM-dd"));
		
		УстановитьЗаголовокСвернутогоОтображения(ЭтотОбъект, "ГруппаОтбор", ДинамическиеПараметры);
		
	КонецЕсли;  
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ЗапасыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура Заполнить(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		Если ЗначениеЗаполнено(Объект.Запасы) Тогда
			РезультатОтвета = Ждать ВопросАсинх(НСтр("ru = 'Табличная часть не пустая. Очистить?'"), РежимДиалогаВопрос.ДаНет);
			Если РезультатОтвета <> Неопределено И РезультатОтвета = КодВозвратаДиалога.Да Тогда
				Объект.Запасы.Очистить();
				ЗаполнитьНаСервере();		
			КонецЕсли; 	
		Иначе
			ЗаполнитьНаСервере();
		КонецЕсли; 	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	СкладыИсключения = Новый СписокЗначений; 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК Ссылка,
	|	СтруктурныеЕдиницыДополнительныеРеквизиты.Свойство КАК Свойство,
	|	СтруктурныеЕдиницыДополнительныеРеквизиты.Значение КАК Значение,
	|	СтруктурныеЕдиницыДополнительныеРеквизиты.Свойство.Имя КАК СвойствоИмя
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы.ДополнительныеРеквизиты КАК СтруктурныеЕдиницыДополнительныеРеквизиты
	|		ПО (СтруктурныеЕдиницы.Ссылка = СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка)
	|			И (СтруктурныеЕдиницыДополнительныеРеквизиты.Свойство.Имя = ""тм_ОсновныеСклады"")
	|ГДЕ
	|	СтруктурныеЕдиницыДополнительныеРеквизиты.Значение ЕСТЬ NULL";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СкладыИсключения.Добавить(Выборка.Ссылка);
	КонецЦикла; 
	
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("КонПериода", КонецДня(Объект.ДатаПроданныхТоваров));
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(Объект.ДатаПроданныхТоваров));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "Производитель_DaCar"));
	Запрос.УстановитьПараметр("СкладыИсключения", СкладыИсключения);

	
	#Область Комментарии
		
	//Запрос.Текст = "ВЫБРАТЬ
	//	|	тм_ПроданныеТоварыОбороты.Регистратор КАК Документ,
	//	|	тм_ПроданныеТоварыОбороты.Номенклатура КАК Номенклатура,
	//	|	тм_ПроданныеТоварыОбороты.Номенклатура.Артикул КАК Артикул,
	//	|	тм_ПроданныеТоварыОбороты.Склад КАК Склад,
	//	|	тм_ПроданныеТоварыОбороты.КоличествоОборот КАК Количество
	//	|ПОМЕСТИТЬ вт_подг
	//	|ИЗ
	//	|	РегистрНакопления.тм_ПроданныеТовары.Обороты(&НачПериода, &КонПериода, Регистратор, Склад = &Склад) КАК тм_ПроданныеТоварыОбороты
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	вт_подг.Документ КАК Документ,
	//	|	вт_подг.Номенклатура КАК Номенклатура,
	//	|	вт_подг.Артикул КАК Артикул,
	//	|	вт_подг.Склад КАК Склад,
	//	|	вт_подг.Количество КАК Количество,
	//	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, """""""""""""""") КАК Производитель
	//	|ПОМЕСТИТЬ вт_производитель
	//	|ИЗ
	//	|	вт_подг КАК вт_подг
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	//	|		ПО вт_подг.Номенклатура = НоменклатураДополнительныеРеквизиты.Ссылка
	//	|			И (НоменклатураДополнительныеРеквизиты.Свойство = &Свойство)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	вт_производитель.Документ КАК Документ,
	//	|	вт_производитель.Номенклатура КАК Номенклатура,
	//	|	вт_производитель.Артикул КАК Артикул,
	//	|	вт_производитель.Склад КАК Склад,
	//	|	вт_производитель.Количество КАК Количество,
	//	|	вт_производитель.Производитель КАК Производитель,
	//	|	ВЫБОР
	//	|		КОГДА вт_производитель.Документ ССЫЛКА Документ.РасходнаяНакладная
	//	|			ТОГДА ВЫБОР
	//	|					КОГДА вт_производитель.Документ.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.)
	//	|						ТОГДА ЛОЖЬ
	//	|					ИНАЧЕ ИСТИНА
	//	|				КОНЕЦ
	//	|		ИНАЧЕ ВЫБОР                          
	//	|				КОГДА вт_производитель.Документ.Комментарий ПОДОБНО ""%"" + ""#Создан документом заказ покупателя"" + ""%""
	//	|					ТОГДА ИСТИНА
	//	|				ИНАЧЕ ЛОЖЬ
	//	|			КОНЕЦ
	//	|	КОНЕЦ КАК ЕстьОснование,
	//	|	ЕСТЬNULL(ОстаткиТоваров.Количество, 0) КАК Остаток,
	//	|	ЕСТЬNULL(ОстаткиТоваров.Резерв, 0) КАК Резерв
	//	|ИЗ
	//	|	вт_производитель КАК вт_производитель
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
	//	|		ПО (вт_производитель.Номенклатура = ОстаткиТоваров.Номенклатура)
	//	|			И (вт_производитель.Склад = ОстаткиТоваров.СтруктурнаяЕдиница)";
	#КонецОбласти 

	Запрос.Текст = "ВЫБРАТЬ
		|	тм_ПроданныеТоварыОбороты.Регистратор КАК Документ,
		|	тм_ПроданныеТоварыОбороты.Номенклатура КАК Номенклатура,
		|	тм_ПроданныеТоварыОбороты.Номенклатура.Артикул КАК Артикул,
		|	тм_ПроданныеТоварыОбороты.Склад КАК Склад,
		|	тм_ПроданныеТоварыОбороты.КоличествоОборот КАК Количество
		|ПОМЕСТИТЬ вт_подг
		|ИЗ
		|	РегистрНакопления.тм_ПроданныеТовары.Обороты(&НачПериода, &КонПериода, Регистратор, Склад = &Склад) КАК тм_ПроданныеТоварыОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_подг.Документ КАК Документ,
		|	вт_подг.Номенклатура КАК Номенклатура,
		|	вт_подг.Артикул КАК Артикул,
		|	вт_подг.Склад КАК Склад,
		|	вт_подг.Количество КАК Количество,
		|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""") КАК Производитель
		|ПОМЕСТИТЬ вт_производитель
		|ИЗ
		|	вт_подг КАК вт_подг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|		ПО вт_подг.Номенклатура = НоменклатураДополнительныеРеквизиты.Ссылка
		|			И (НоменклатураДополнительныеРеквизиты.Свойство = &Свойство)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_производитель.Документ КАК Документ,
		|	вт_производитель.Номенклатура КАК Номенклатура,
		|	вт_производитель.Артикул КАК Артикул,
		|	вт_производитель.Склад КАК Склад,
		|	вт_производитель.Количество КАК Количество,
		|	вт_производитель.Производитель КАК Производитель,
		|	ВЫБОР
		|		КОГДА вт_производитель.Документ ССЫЛКА Документ.РасходнаяНакладная
		|			ТОГДА ВЫБОР
		|					КОГДА вт_производитель.Документ.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.)
		|						ТОГДА ЛОЖЬ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА вт_производитель.Документ.Комментарий ПОДОБНО ""%"" + ""#Создан документом заказ покупателя"" + ""%""
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|	КОНЕЦ КАК ЕстьОснование,
		|	ЕСТЬNULL(ОстаткиТоваров.Количество, 0) КАК Остаток,
		|	ЕСТЬNULL(ОстаткиТоваров.Резерв, 0) КАК Резерв,
		|	ВЫБОР
		|		КОГДА вт_производитель.Документ ССЫЛКА Документ.СписаниеЗапасов
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоСписаниеЗапасов
		|ПОМЕСТИТЬ вт_пред
		|ИЗ
		|	вт_производитель КАК вт_производитель
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
		|		ПО вт_производитель.Номенклатура = ОстаткиТоваров.Номенклатура
		|			И вт_производитель.Склад = ОстаткиТоваров.СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиТоваров.Количество КАК Количество,
		|	ОстаткиТоваров.Резерв КАК Резерв,
		|	ОстаткиТоваров.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ вт_остатокСклада
		|ИЗ
		|	РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
		|ГДЕ
		|	НЕ ОстаткиТоваров.СтруктурнаяЕдиница В
		|				(ВЫБРАТЬ
		|					вт_пред.Склад
		|				ИЗ
		|					вт_пред)
		|	И НЕ ОстаткиТоваров.СтруктурнаяЕдиница В (&СкладыИсключения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_пред.Документ КАК Документ,
		|	вт_пред.Номенклатура КАК Номенклатура,
		|	вт_пред.Артикул КАК Артикул,
		|	вт_пред.Склад КАК Склад,
		|	вт_пред.Количество КАК Количество,
		|	вт_пред.Производитель КАК Производитель,
		|	вт_пред.ЕстьОснование КАК ЕстьОснование,
		|	вт_пред.Остаток КАК Остаток,
		|	вт_пред.Резерв КАК Резерв,
		|	ЕСТЬNULL(вт_остатокСклада.Количество, 0) КАК ОстатокСклад,
		|	ЕСТЬNULL(вт_остатокСклада.Резерв, 0) КАК РезервСклад,
		|	вт_пред.ЭтоСписаниеЗапасов КАК ЭтоСписаниеЗапасов
		|ИЗ
		|	вт_пред КАК вт_пред
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_остатокСклада КАК вт_остатокСклада
		|		ПО (вт_пред.Номенклатура = вт_остатокСклада.Номенклатура)";

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли; 
		
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если Строка(Объект.Склад) = "Dacar-Avto" Тогда
			НоваяСтрока.Остаток = Выборка.Остаток;
			НоваяСтрока.Резерв  = Выборка.Резерв;

			НоваяСтрока.ОстатокExpress = Выборка.ОстатокСклад;
			НоваяСтрока.РезервExpress  = Выборка.РезервСклад;
		Иначе
			НоваяСтрока.Остаток = Выборка.ОстатокСклад;
			НоваяСтрока.Резерв  = Выборка.РезервСклад;

			НоваяСтрока.ОстатокExpress = Выборка.Остаток;
			НоваяСтрока.РезервExpress  = Выборка.Резерв;
		КонецЕсли; 
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

// Процедура устанавливает заголовок свернутого отображения для группы, по шаблону:
// <заголовок группы (как задан в конфигураторе)> : <динамический параметр 1>, <динамический параметр 2>
//
// Параметры:
//  Форма					 - Форма	 - текущая форма
//  НазваниеГруппы			 - Строка	 - имя группы формы, для которой устанавливается заголовок
//  ДинамическиеПараметры	 - Массив	 - массив частей заголовка.
//
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокСвернутогоОтображения(Форма, НазваниеГруппы, ДинамическиеПараметры)
	
	Заголовок = Новый Массив;
	
	Для Каждого Параметр Из ДинамическиеПараметры Цикл
		Заголовок.Добавить(Параметр);
	КонецЦикла;
	
	Если Заголовок.Количество() > 0 Тогда
		Форма.Элементы[НазваниеГруппы].Заголовок = СтрСоединить(Заголовок, " / ");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПроданныхТоваровПриИзменении(Элемент)
	
	ДинамическиеПараметры = ПараметрыЗаголовкаОтбора();

	УстановитьЗаголовокСвернутогоОтображения(ЭтотОбъект, "ГруппаОтбор", ДинамическиеПараметры);

КонецПроцедуры

&НаКлиенте
Функция ПараметрыЗаголовкаОтбора()
	
	ДинамическиеПараметры = Новый Массив;
	ДинамическиеПараметры.Добавить("Отбор:");
	
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		ДинамическиеПараметры.Добавить(Строка(Объект.Склад));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаПроданныхТоваров) Тогда
		ДинамическиеПараметры.Добавить(Формат(Объект.ДатаПроданныхТоваров, "ДФ=yyyy-MM-dd"));
	КонецЕсли; 
		
	Возврат ДинамическиеПараметры;

КонецФункции

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	ДинамическиеПараметры = Новый Массив;
	ДинамическиеПараметры.Добавить("Отбор:");
	
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		ДинамическиеПараметры.Добавить(Строка(Объект.Склад));
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.ДатаПроданныхТоваров) Тогда
		ДинамическиеПараметры.Добавить(Формат(Объект.ДатаПроданныхТоваров, "ДФ=yyyy-MM-dd"));
	КонецЕсли; 

	УстановитьЗаголовокСвернутогоОтображения(ЭтотОбъект, "ГруппаОтбор", ДинамическиеПараметры);

КонецПроцедуры

#КонецОбласти 
