
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура тм_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ДобавитьВставитьЭлементыНаФорму();
	
	тм_ОбщегоНазначенияВызовСервера.ВывестиПроизводителя(Объект.Запасы);

КонецПроцедуры

&НаКлиенте
Процедура тм_ПередЗаписьюПеред(Отказ, ПараметрыЗаписи)
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя") И
		Не ЗначениеЗаполнено(Объект.тм_ДокументОснованиеНачисленияБонусов) Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(, "Необходимо указать документ основания начисления бонусов на странице ""Бонусная система""");
	КонецЕсли; 
		
КонецПроцедуры
 
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура тм_ЗаполнитьИзФайлаВместо(Команда)

	Если Контрагент.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан контрагент!";
		Сообщение.Поле = "Контрагент";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	
	Настройки = ПолучитьНастройкиФайла(Контрагент);
	Если Настройки.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заданы настройки!";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	                       
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПомещенияФайлаНаСервер",ЭтаФорма, Настройки);
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов();
	ПараметрыДиалога.Заголовок = "Выберите файл";
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	ПараметрыДиалога.Фильтр = "Документ Excel (*.xls, *.xlsx)|*.xls;*.xlsx|";
	
	НачатьПомещениеФайлаНаСервер(ОписаниеОповещения,,,,ПараметрыДиалога);
	
КонецПроцедуры

&НаКлиенте
Процедура тм_ВидОперацииПриИзмененииПосле(Элемент)
		
	УстановитьВидимостьЭлементов()
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура тм_ЗапасыНоменклатураПриИзмененииПосле(Элемент)
	
	Номенклатура = Элементы.Запасы.ТекущиеДанные.Номенклатура;
	Если Не Номенклатура.Пустая() Тогда                                        
		тм_ОбщегоНазначенияВызовСервера.ВывестиПроизводителя(Номенклатура, Элементы.Запасы.ТекущиеДанные.тм_Производитель);
	КонецЕсли; 
	
КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьВставитьЭлементыНаФорму()
	
	тм_ОбщегоНазначенияВызовСервера.ДобавитьКомандуНаФорму(ЭтаФорма, 
		"ЗаполнитьИзФайла",
		ВидКнопкиФормы.ОбычнаяКнопка,
		"Заполнить из файла",
		"тм_ЗаполнитьИзФайлаВместо");
		
	#Область БонуснаяСистема
	
	СтраницаБонуснаяСистема = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
		"БонуснаяСистема",
		Тип("ГруппаФормы"),
		ВидГруппыФормы.Страница,
		Элементы.Страницы,
		Неопределено); 
	
	СтраницаБонуснаяСистема.Заголовок = "Бонусная система";
	
	ИспользованныеБонусы = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
		"тм_ДокументОснованиеНачисленияБонусов",
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		СтраницаБонуснаяСистема,
		"Объект.тм_ДокументОснованиеНачисленияБонусов"); 	
	
	#КонецОбласти 
		
	#Область Производитель
	
	ДобавляемыеРеквизиты	= Новый Массив;                   
		
    Реквизит_тм_Производитель = Новый РеквизитФормы("тм_Производитель", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)), "Объект.Запасы",  "Производитель");
	
    ДобавляемыеРеквизиты.Добавить(Реквизит_тм_Производитель);
	
    ИзменитьРеквизиты(ДобавляемыеРеквизиты);		
		
	ЭлементПроизводитель = тм_ОбщегоНазначенияВызовСервера.ВставитьЭлементНаФорму(ЭтаФорма, 
		"Производитель",                                                                                  	
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		ЭтаФорма.Элементы.Запасы,
		"Объект.Запасы.тм_Производитель", Элементы.ЗапасыХарактеристика); 
		
	ЭлементПроизводитель.Заголовок = "Производитель";	
	ЭлементПроизводитель.Доступность = Ложь;	
	
	#КонецОбласти 
	
	
	УстановитьВидимостьЭлементов();
		
КонецПроцедуры // ДобавитьЭлементыНаФорму()

&НаКлиенте
Процедура ПослеПомещенияФайлаНаСервер(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(ОписаниеПомещенногоФайла) = Тип("Неопределено") Тогда
		Возврат;	
	КонецЕсли; 
	
	Состояние("Идет загрузка.. Пожалуйста, подождите..",,, БиблиотекаКартинок.ЗагрузитьНастройкиОтчета);
	ЗаполнитьИзФайлаНаСервере(ОписаниеПомещенногоФайла.Адрес, ОписаниеПомещенногоФайла.СсылкаНаФайл.Расширение, ДополнительныеПараметры);
	ПостОбработкаТабличнойЧасти();
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьИзФайлаНаСервере(АдресВоВременномХранилище, Расширение, Настройки)
	
	ФайлНаСервере = ПолучитьФайлНаСервере(АдресВоВременномХранилище, Расширение);
	
	НачалоЗагрузки = Настройки.НомерСтрокиНачалаЗагрузки;
	ПорядокКолонокExcel = Настройки.ПорядокКолонокExcel;
	
	НастройкиСтрок = Новый Соответствие;
	Для каждого Стр Из ПорядокКолонокExcel Цикл
		НастройкиСтрок.Вставить(Стр.НомерКолонки, Стр.ИмяКолонки);
	КонецЦикла;  
	//Вывод в табличный документ
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ФайлНаСервере, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	
	ОбластьФайла = ТабличныйДокумент.ПолучитьОбласть();
	
	КоличествоСтрок = ТабличныйДокумент.ПолучитьРазмерОбластиДанныхПоВертикали();
	КоличествоКолонок = ТабличныйДокумент.ПолучитьРазмерОбластиДанныхПоГоризонтали();
	
	ТаблицаДанных = Новый ТаблицаЗначений; 
	ТаблицаДанных.Колонки.Добавить("Артикул", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(25)));
	ТаблицаДанных.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(255)));
	ТаблицаДанных.Колонки.Добавить("Производитель", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(255)));
	ТаблицаДанных.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,2)));
	ТаблицаДанных.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,2)));
	ТаблицаДанных.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,2)));
	
	ТребуетсяОпределениеИзОднойЯчейки = ?(Объект.Контрагент.ИНН = "5257198376", Истина, Ложь); //ИКСОРА
	
	//Заполнение таблицы из файла
	СтрокиОбработкиЗакончены = Ложь;
	Для НомерСтроки = НачалоЗагрузки По КоличествоСтрок Цикл
		Если СтрокиОбработкиЗакончены Тогда
			Прервать;
		КонецЕсли; 		
		НоваяСтрока = ТаблицаДанных.Добавить();
		Для НомерКолонки = 1 По КоличествоКолонок Цикл
			ИмяКолонкиНастроек = НастройкиСтрок.Получить(НомерКолонки);
			Если Не ИмяКолонкиНастроек  = Неопределено Тогда
				Если ИмяКолонкиНастроек = "Артикул" Или ИмяКолонкиНастроек = "Производитель" Или ИмяКолонкиНастроек = "Наименование" Тогда
					ЗначениеКолонки = СокрЛП(ОбластьФайла.ПолучитьОбласть("R" + Формат(НомерСтроки, "ЧГ=0") + "C" + НомерКолонки).ТекущаяОбласть.Текст);
					Если ПустаяСтрока(ЗначениеКолонки) Тогда
						СтрокиОбработкиЗакончены = Истина;
						ТаблицаДанных.Удалить(ТаблицаДанных.Количество()-1);
						Прервать;
					КонецЕсли; 
					
					Если ИмяКолонкиНастроек = "Артикул" Тогда						
						ЗначениеКолонки = СтрЗаменить(ЗначениеКолонки, " ", "");
						ЗначениеКолонки = СтрЗаменить(ЗначениеКолонки, "-", "");   
						ЗначениеКолонки = СтрЗаменить(ЗначениеКолонки, "/", "");
						ЗначениеКолонки = СтрЗаменить(ЗначениеКолонки, ".", "");						
						ЗначениеКолонки = СтрЗаменить(ЗначениеКолонки, ",", "");						
						ЗначениеКолонки = СтрЗаменить(ЗначениеКолонки, Символы.НПП, "");
					КонецЕсли;
					
					Если ИмяКолонкиНастроек = "Производитель" Тогда
						ЗначениеКолонки = ВРег(ЗначениеКолонки);	
					КонецЕсли; 
					
					Если ТребуетсяОпределениеИзОднойЯчейки Тогда
						Если ИмяКолонкиНастроек = "Производитель" Или ИмяКолонкиНастроек = "Артикул" Или ИмяКолонкиНастроек = "Наименование" Тогда
							Произодитель = СокрЛП(СтрРазделить(ЗначениеКолонки, "|")[0]);
							НоваяСтрока["Производитель"] = Произодитель;	
							
							Артикул = СокрЛП(СтрРазделить(ЗначениеКолонки, "|")[1]);
							НоваяСтрока["Артикул"] = Артикул;								
							
							Наименование = СокрЛП(СтрРазделить(ЗначениеКолонки, "|")[2]);
							НоваяСтрока["Наименование"] = Наименование;															
						КонецЕсли; 						
					Иначе
						НоваяСтрока[ИмяКолонкиНастроек] = ЗначениеКолонки;	
					КонецЕсли; 
				Иначе
					ЗначениеКолонки = СтрЗаменить(ОбластьФайла.ПолучитьОбласть("R" + Формат(НомерСтроки, "ЧГ=0") + "C" + НомерКолонки).ТекущаяОбласть.Текст, " ", "");
					НоваяСтрока[ИмяКолонкиНастроек] = Число(ЗначениеКолонки);		
				КонецЕсли; 
				ЗначениеКолонки = Неопределено;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;  

	ПереопределитьПроизводителя(ТаблицаДанных);
	ОбработатьВходящиеДанные(ТаблицаДанных);
	
КонецПроцедуры // ЗаполнитьИзФайла()
 
&НаСервереБезКонтекста
Функция ПолучитьНастройкиФайла(Контрагент)

	Возврат Справочники.тм_НастройкиЗагрузкиПриходныхНакладных.НайтиПоРеквизиту("Контрагент", Контрагент);
	
КонецФункции // ПолучитьНастройкиФайла()

&НаСервереБезКонтекста
Функция ПолучитьФайлНаСервере(АдресВоВременномХранилище, Расширение)

	ИмяВФ = ПолучитьИмяВременногоФайла(Расширение);
	ДД = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	ДД.Записать(ИмяВФ);
	
	Возврат ИмяВФ;

КонецФункции // ПолучитьФайлНаСервере()
 
&НаСервере
Процедура ОбработатьВходящиеДанные(ТаблицаДанных)

	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапроса(); 

	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных);
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Данные = РезультатЗапроса.Выгрузить();
	
	ТаблицаВДокумент = ТаблицаДанных.СкопироватьКолонки();
	ТаблицаВДокумент.Колонки.Добавить("Номенклатура");
	ТаблицаВДокумент.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаВДокумент.Колонки.Добавить("СтавкаНДС");	
	ТаблицаВДокумент.Колонки.Добавить("Всего");	
	
	Для каждого СтрокаДанных Из ТаблицаДанных Цикл
		ИскомыеСтроки = Данные.НайтиСтроки(Новый Структура("Артикул, Наименование, Количество, Сумма", 
			СтрокаДанных.Артикул, СтрокаДанных.Наименование, СтрокаДанных.Количество, СтрокаДанных.Сумма)); 
			
		ВыбраннаяСтрока = ИскомыеСтроки[0];	
		
		Если ВыбраннаяСтрока.Номенклатура.Пустая() Тогда
		//Если ИскомыеСтроки.Количество() = 0 Тогда
			НомерДокументаДляКомментария = ?(Объект.Ссылка.Пустая(), Объект.Контрагент, Объект.Ссылка.Номер);
			СтрутураДанных = ПодготовитьСтруктуруДляДобавленияВТаблицу(СтрокаДанных, НомерДокументаДляКомментария);	
			ЗаполнитьЗначенияСвойств(ТаблицаВДокумент.Добавить(), СтрутураДанных);
		Иначе
			НоваяСтрока = ТаблицаВДокумент.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыбраннаяСтрока);
			НоваяСтрока.СтавкаНДС = Справочники.СтавкиНДС.НайтиПоНаименованию("Без НДС"); 
			НоваяСтрока.Всего = НоваяСтрока.Сумма;
		КонецЕсли; 		
	КонецЦикла;  
		
	тОбъект = РеквизитФормыВЗначение("Объект");
	тОбъект.Запасы.Загрузить(ТаблицаВДокумент);
	ЗначениеВРеквизитФормы(тОбъект, "Объект");
	
КонецПроцедуры // ЗагрузитьДанныеВДокумент()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапроса()
	
	Возврат   "ВЫБРАТЬ
		|	ТаблицаДанных.Наименование КАК Наименование,
		|	ТаблицаДанных.Артикул КАК Артикул,
		|	ТаблицаДанных.Производитель КАК Производитель,
		|	ТаблицаДанных.Количество КАК Количество,
		|	ТаблицаДанных.Цена КАК Цена,
		|	ТаблицаДанных.Сумма КАК Сумма
		|ПОМЕСТИТЬ вт_данные
		|ИЗ
		|	&ТаблицаДанных КАК ТаблицаДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_данные.Наименование КАК Наименование,
		|	вт_данные.Наименование КАК НаименованиеПолное,
		|	вт_данные.Артикул КАК Артикул,
		|	вт_данные.Производитель КАК ПроизводительФайл,
		|	вт_данные.Количество КАК Количество,
		|	вт_данные.Цена КАК Цена,
		|	вт_данные.Сумма КАК Сумма,
		|	ЕСТЬNULL(Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.)) КАК Номенклатура,
		|	НоменклатураДополнительныеРеквизиты.Свойство КАК СвойствоПроизводитель,
		|	НоменклатураДополнительныеРеквизиты.Значение КАК ПроизводительСсылка,
		|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	вт_данные КАК вт_данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|			ПО Номенклатура.Ссылка = НоменклатураДополнительныеРеквизиты.Ссылка
		|				И (НоменклатураДополнительныеРеквизиты.Свойство.Наименование = ""Производитель"")
		|		ПО ((ВЫРАЗИТЬ(вт_данные.Артикул КАК СТРОКА(25))) = Номенклатура.Артикул)
		|			И (вт_данные.Производитель = НоменклатураДополнительныеРеквизиты.Значение.Наименование)";	

	//Возврат  "ВЫБРАТЬ
	//|	ТаблицаДанных.Наименование КАК Наименование,
	//|	ТаблицаДанных.Артикул КАК Артикул,
	//|	ТаблицаДанных.Производитель КАК Производитель,
	//|	ТаблицаДанных.Количество КАК Количество,
	//|	ТаблицаДанных.Цена КАК Цена,
	//|	ТаблицаДанных.Сумма КАК Сумма
	//|ПОМЕСТИТЬ вт_данные
	//|ИЗ
	//|	&ТаблицаДанных КАК ТаблицаДанных
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	вт_данные.Наименование КАК Наименование,
	//|	вт_данные.Наименование КАК НаименованиеПолное,
	//|	вт_данные.Артикул КАК Артикул,
	//|	вт_данные.Производитель КАК ПроизводительФайл,
	//|	вт_данные.Количество КАК Количество,
	//|	вт_данные.Цена КАК Цена,
	//|	вт_данные.Сумма КАК Сумма,
	//|	ЕСТЬNULL(Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.)) КАК Номенклатура,
	//|	НоменклатураДополнительныеРеквизиты.Свойство КАК СвойствоПроизводитель,
	//|	НоменклатураДополнительныеРеквизиты.Значение КАК ПроизводительСсылка,
	//|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	//|ИЗ
	//|	вт_данные КАК вт_данные
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	//|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	//|			ПО Номенклатура.Ссылка = НоменклатураДополнительныеРеквизиты.Ссылка
	//|				И (НоменклатураДополнительныеРеквизиты.Свойство.Наименование = ""Производитель"")
	//|		ПО ((ВЫРАЗИТЬ(вт_данные.Артикул КАК СТРОКА(25))) = Номенклатура.Артикул)
	//|ГДЕ
	//|	вт_данные.Производитель = НоменклатураДополнительныеРеквизиты.Значение.Наименование
	//|	И НЕ Номенклатура.ПометкаУдаления";	

КонецФункции // ПолучитьТекстЗапроса()
 
&НаСервереБезКонтекста
Функция СоздатьНовуюПозициюНоменклатуры(СтрокаДанных, НомерДокумента)

	СвойствоПроизводитель = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Производитель");
	
	Если СвойствоПроизводитель.Пустая() Тогда
		СвойствоПроизводитель = СоздатьДополнительныйРеквизитПроизводитель("Производитель");
	КонецЕсли; 
	
	// Дополнитительный поиск номенклатуры
	//Нужен, т.к. в документе бывает несколько одинаковых позиций, значит будут созданы дубли
	НоменклатураИскомая = тм_ОбщегоНазначенияВызовСервера.НайтиНоменклатуруПоАртикулуИПроизводителю(СтрокаДанных.Артикул, СтрокаДанных.Производитель);
	//НайтиНоменклатуруПоАртикулуИПроизводителю(СтрокаДанных.Артикул, СтрокаДанных.Производитель);
	//НоменклатураИскомая = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", СтрокаДанных.Артикул);
	
	Если Не НоменклатураИскомая.Пустая() Тогда
		Возврат НоменклатураИскомая;
	КонецЕсли; 	
	
	Номенклатура = Справочники.Номенклатура.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(Номенклатура, СтрокаДанных);
	Номенклатура.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
	Номенклатура.НаименованиеПолное = Номенклатура.Наименование;
	Номенклатура.КатегорияНоменклатуры = Справочники.КатегорииНоменклатуры.БезКатегории;
	Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас;
	Номенклатура.СчетУчетаДоходов = ПланыСчетов.Управленческий.ПрочиеДоходы;
	Номенклатура.СчетУчетаЗапасов = ПланыСчетов.Управленческий.СырьеИМатериалы;
	Номенклатура.СчетУчетаЗатрат  = ПланыСчетов.Управленческий.НезавершенноеПроизводство;
	Номенклатура.МетодОценки      = Перечисления.МетодОценкиЗапасов.ПоСредней;
	Номенклатура.СпособПополнения = Перечисления.СпособыПополненияЗапасов.Закупка;
	Номенклатура.НаправлениеДеятельности = Справочники.НаправленияДеятельности.ОсновноеНаправление;
	Номенклатура.Комментарий = СтрШаблон("#Создан загрузкой поступления: %1", НомерДокумента);
	
    НовоеДопСвойство = Номенклатура.ДополнительныеРеквизиты.Добавить();
	НовоеДопСвойство.Свойство = СвойствоПроизводитель; 
	
	ЗначениеДоп = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(СтрокаДанных.Производитель, Истина);
	Если ЗначениеДоп.Пустая() Тогда
		
		ЗначениеДоп = Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
		ЗначениеДоп.Владелец = СвойствоПроизводитель;
		ЗначениеДоп.Наименование = СтрокаДанных.Производитель;
		Попытка
			ЗначениеДоп.Записать();	
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки; 
		
	КонецЕсли; 
	
	НовоеДопСвойство.Значение = ЗначениеДоп.Ссылка; 

	Попытка
		Номенклатура.Записать();
		Возврат Номенклатура.Ссылка;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
КонецФункции // СоздатьНовуюПозициюНоменклатуры()
 
&НаСервереБезКонтекста
Функция ПодготовитьСтруктуруДляДобавленияВТаблицу(СтрокаДанных, НомерДокументаДляКомментария)

	СтруктураДанных = Новый Структура; 
	
	Номенклатура = СоздатьНовуюПозициюНоменклатуры(СтрокаДанных, НомерДокументаДляКомментария);
	
	СтруктураДанных.Вставить("Номенклатура", Номенклатура); 
	СтруктураДанных.Вставить("Артикул", СтрокаДанных.Артикул);
	СтруктураДанных.Вставить("ЕдиницаИзмерения", Номенклатура.ЕдиницаИзмерения); 
	СтруктураДанных.Вставить("Наименование", СтрокаДанных.Наименование);
	СтруктураДанных.Вставить("НаименованиеПолное", СтрокаДанных.Наименование);
	СтруктураДанных.Вставить("Количество", СтрокаДанных.Количество);
	СтруктураДанных.Вставить("Цена", СтрокаДанных.Цена);
	СтруктураДанных.Вставить("Сумма", СтрокаДанных.Сумма);
	СтруктураДанных.Вставить("СтавкаНДС", Справочники.СтавкиНДС.НайтиПоНаименованию("Без НДС"));

	Возврат СтруктураДанных;	

КонецФункции // ПодготовитьСтруктуруДляДобавленияВТаблицу()
 
&НаСервереБезКонтекста
Функция СоздатьДополнительныйРеквизитПроизводитель(НаименованиеСвойства)

	НовоеСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	НовоеСвойство.Виден = Истина;
	НовоеСвойство.Заголовок = "Производитель";
	НовоеСвойство.Наименование = "Производитель";
	НовоеСвойство.Имя = "Производитель_DaCar";
	НовоеСвойство.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие;
	НовоеСвойство.Записать();
	
	СвойствоСсылка = НовоеСвойство.Ссылка;
	
	//проверим, что реквизит указан в наборе доп. реквизитов заказа покупателя
    НаборОб = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие.ПолучитьОбъект();
    Если НаборОб.ДополнительныеРеквизиты.Найти(СвойствоСсылка, "Свойство") = Неопределено Тогда
        //добавим реквизит в набор
        СтрНаборОб = НаборОб.ДополнительныеРеквизиты.Добавить();
        СтрНаборОб.Свойство = СвойствоСсылка;
	КонецЕсли;
	
    Если НаборОб.Модифицированность() Тогда
        //запишем при необходимости
        НаборОб.Записать();
	КонецЕсли;
	
	Возврат СвойствоСсылка;

КонецФункции // СоздатьДополнительныйРеквизитПроизводитель()

&НаКлиенте
Процедура ПостОбработкаТабличнойЧасти()

	Для каждого СтрокаТаблицы Из Объект.Запасы Цикл 
		РассчитатьСуммуВСтрокеТабличнойЧасти(ИмяТЧЗапасы(), СтрокаТаблицы);
		СтрокаТаблицы.ЯчейкаДоступна = ЯчейкаДоступна(СтрокаТаблицы.СтруктурнаяЕдиница);
	КонецЦикла;

КонецПроцедуры // ПостОбработкаТабличнойЧасти()

&НаСервере
Процедура УстановитьВидимостьЭлементов()

	Если Объект.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя Тогда
		Элементы.БонуснаяСистема.Видимость = Истина;
	Иначе
		Элементы.БонуснаяСистема.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры

//&НаСервереБезКонтекста
//Функция НайтиНоменклатуруПоАртикулуИПроизводителю(Артикул, стрПроизводитель)

//	СвойствоПроизводитель = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Производитель");
//	Производитель = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(стрПроизводитель, Истина);

//	Ном = Справочники.Номенклатура.ПустаяСсылка();
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	Номенклатура.Ссылка КАК Ссылка
//		|ИЗ
//		|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
//		|		ПО НоменклатураДополнительныеРеквизиты.Ссылка = Номенклатура.Ссылка
//		|ГДЕ
//		|	НоменклатураДополнительныеРеквизиты.Свойство = &Свойство
//		|	И НоменклатураДополнительныеРеквизиты.Значение = &Значение
//		|	И Номенклатура.Артикул = &Артикул";
//	
//	Запрос.УстановитьПараметр("Артикул", Артикул);
//	Запрос.УстановитьПараметр("Значение", Производитель);
//	Запрос.УстановитьПараметр("Свойство", СвойствоПроизводитель);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	Выборка = РезультатЗапроса.Выбрать();
//	
//	Пока Выборка.Следующий() Цикл
//		Ном = Выборка.Ссылка;	
//	КонецЦикла;
//	
//	Возврат Ном;

//КонецФункции // НайтиНоменклатуруПоАртикулуИПроизводителю()

&НаСервере
Процедура ПереопределитьПроизводителя(ТаблицаДанных)

	мПроизводители = ТаблицаДанных.ВыгрузитьКолонку("Производитель");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тм_СоответствиеПроизводителейСинонимы.Ссылка.Наименование КАК Производитель,
		|	тм_СоответствиеПроизводителейСинонимы.Синоним КАК Синоним
		|ИЗ
		|	Справочник.тм_СоответствиеПроизводителей.Синонимы КАК тм_СоответствиеПроизводителейСинонимы
		|ГДЕ
		|	тм_СоответствиеПроизводителейСинонимы.Синоним В(&Синоним)";
	
	Запрос.УстановитьПараметр("Синоним", мПроизводители);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ИскомыеСтроки = ТаблицаДанных.НайтиСтроки(Новый Структура("Производитель", Выборка.Синоним));  
		Для каждого Стр Из ИскомыеСтроки Цикл
			Стр.Производитель = Выборка.Производитель;
		КонецЦикла;  
	КонецЦикла;

КонецПроцедуры // ПереопределитьПроизводителя()
 
#КонецОбласти 
