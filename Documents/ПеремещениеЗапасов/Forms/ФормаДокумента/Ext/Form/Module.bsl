

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура тм_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)

	ДобавитьВставитьЭлементыНаФорму();	
	ДобавитьКоманды();
	
	тм_ОбщегоНазначенияВызовСервера.ВывестиПроизводителя(Объект.Запасы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура тм_ЗапасыНоменклатураПриИзмененииПосле(Элемент)
	
	Номенклатура = Элементы.Запасы.ТекущиеДанные.Номенклатура;
	Если Не Номенклатура.Пустая() Тогда                                        
		тм_ОбщегоНазначенияВызовСервера.ВывестиПроизводителя(Номенклатура, Элементы.Запасы.ТекущиеДанные.тм_Производитель);
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереместитьВЗаказНаряд(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Запасы) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Запасы не заполнены.";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	
	Если Модифицированность Тогда
		Попытка
			Записать();			
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось записать." + ОписаниеОшибки();
			Сообщение.Сообщить(); 
			Возврат;
		КонецПопытки; 
	КонецЕсли; 
			
	ЗначениеОтбора = Новый Структура("СостояниеЗаказа, Проведен", ПолучитьСостояниеНаСервере(), Истина);
	ПараметрыПередачи = Новый Структура("Отбор", ЗначениеОтбора);
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПослеВыбораЗаказНаряда", ЭтаФорма);
	
	ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаВыбора", ПараметрыПередачи, ЭтотОбъект,,,, ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьВставитьЭлементыНаФорму()
	
	#Область Производитель
	
	ДобавляемыеРеквизиты	= Новый Массив;                   
		
    Реквизит_тм_Производитель = Новый РеквизитФормы("тм_Производитель", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)), "Объект.Запасы",  "Производитель");
	
    ДобавляемыеРеквизиты.Добавить(Реквизит_тм_Производитель);
	
    ИзменитьРеквизиты(ДобавляемыеРеквизиты);		
		
	ЭлементПроизводитель = тм_ОбщегоНазначенияВызовСервера.ВставитьЭлементНаФорму(ЭтаФорма, 
		"Производитель",                                                                                  	
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		ЭтаФорма.Элементы.Запасы,
		"Объект.Запасы.тм_Производитель", Элементы.ЗапасыХарактеристика); 
		
	ЭлементПроизводитель.Заголовок = "Производитель";	
	ЭлементПроизводитель.Доступность = Ложь;	
	
	#КонецОбласти 	

КонецПроцедуры // ДобавитьВставитьЭлементыНаФорму()
 
&НаСервере
Процедура ДобавитьКоманды()

	#Область ПереместитьВЗаказНаряд
	
	СтраницаБонуснаяСистема = Элементы.Найти("БонуснаяСистема");
	// Создадим команды
    Команда		= ЭтаФорма.Команды.Добавить("ПереместитьВЗаказНаряд");
    Команда.Действие	= "ПереместитьВЗаказНаряд";
	
    // Создадим кнопку и привяжем к ней команду    	
	КнопкаПереместитьВЗаказНаряд = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
		"ПереместитьВЗаказНаряд",
		Тип("КнопкаФормы"),
		Неопределено,
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ГруппаВажныеКоманды,
		Неопределено); 	
	КнопкаПереместитьВЗаказНаряд.Заголовок	 = "Переместить в заказ-наряд";
	КнопкаПереместитьВЗаказНаряд.ИмяКоманды	 = "ПереместитьВЗаказНаряд";
	КнопкаПереместитьВЗаказНаряд.Картинка 	 = БиблиотекаКартинок.ЗаполнитьПоОснованию;
	КнопкаПереместитьВЗаказНаряд.Отображение = ОтображениеКнопки.КартинкаИТекст;
	#КонецОбласти 

КонецПроцедуры // ДобавитьКоманды()
 
&НаСервере
Функция ПолучитьСостояниеНаСервере()

	Возврат Справочники.СостоянияЗаказНарядов.НайтиПоНаименованию("В работе");	

КонецФункции // ПолучитьСостояниеНаСервере()

&НаСервере
Процедура ПослеВыбораЗаказНаряда(ЗаказНарядСсылка, ДопПараметры) Экспорт

	Если ЗаказНарядСсылка = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	Попытка
		ЗаказНаряд = ЗаказНарядСсылка.ПолучитьОбъект();
		ЗаказНаряд.Заблокировать();
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Невозможно заблокировать документ." + ОписаниеОшибки();
		Сообщение.Сообщить(); 
		Возврат;
	КонецПопытки;

	ДокументПеремещение = РеквизитФормыВЗначение("Объект");
	Запасы = ДокументПеремещение.Запасы;
	
	СписокНоменклатур = Запасы.ВыгрузитьКолонку("Номенклатура");
	
	СоответствиеЦен = ПолучитьЦеныНоменклатуры(СписокНоменклатур);
	ТекущийСотрудник = тм_КЭШ.СотрудникПользователя(Пользователи.ТекущийПользователь());
	Для каждого Стр Из Запасы Цикл
		НоваяСтрокаЗН = ЗаказНаряд.Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗН, Стр);
		НоваяСтрокаЗН.ТипНоменклатурыЗапас = Истина;
		НоваяСтрокаЗН.Цена = СоответствиеЦен[НоваяСтрокаЗН.Номенклатура];
		НоваяСтрокаЗН.СтавкаНДС = Справочники.СтавкиНДС.НайтиПоНаименованию("Без НДС");
		НоваяСтрокаЗН.Сумма = НоваяСтрокаЗН.Количество * НоваяСтрокаЗН.Цена;
		НоваяСтрокаЗН.тм_Сотрудник = ТекущийСотрудник;
	КонецЦикла;  
	
	Попытка
		ЗаказНаряд.Записать();	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заказ-наряд <" + Строка(ЗаказНаряд) + "> заполнен.";
		Сообщение.Сообщить(); 			
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 	
	КонецПопытки; 
	
КонецПроцедуры // ПослеВыбораЗаказНаряда()

&НаСервере
Функция ПолучитьЦеныНоменклатуры(СписокНоменклатур)

	СоответствиеЗначений = Новый Соответствие; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			,
		|			Номенклатура В (&СписокНоменклатур)
		|				И ВидЦен = Значение(Справочник.ВидыЦен.Оптовая)) КАК ЦеныНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("СписокНоменклатур", СписокНоменклатур);
	
	ТаблицаЦен = Запрос.Выполнить().Выгрузить();
	
	Для каждого Номенклатура Из СписокНоменклатур Цикл
		ИскомаяСтрока = ТаблицаЦен.Найти(Номенклатура, "Номенклатура");
		СоответствиеЗначений.Вставить(Номенклатура, ?(ИскомаяСтрока = Неопределено, 0, ИскомаяСтрока.Цена));
	КонецЦикла;  	

	Возврат СоответствиеЗначений;
	
КонецФункции // ПолучитьЦенуНоменклатуры()
 
#КонецОбласти  
