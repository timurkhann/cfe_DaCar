
#Область ОбработчикиСобытийФормы
 
&НаСервере
Процедура тм_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
		
	ДобавитьВставитьЭлементыНаФорму();
	
	ДобавитьКоманды();

	//Блокировка документа от ввода данных
	ЗаблокироватьРазблокироватьДокумент();
	
	тм_ОбщегоНазначенияВызовСервера.ВывестиПроизводителя(Объект.Запасы);
	
КонецПроцедуры

&НаКлиенте
Процедура тм_ПриОткрытииПосле(Отказ)
		
	тм_УправлениеДоступом();
		
КонецПроцедуры

&НаСервере
Процедура тм_ПередЗаписьюНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Избавит от лишних блокировок формы
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("тм_ЭтоНовыйДокумент", Истина);
	КонецЕсли; 	
	
КонецПроцедуры

&НаСервере
Процедура тм_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("тм_ЭтоНовыйДокумент") Тогда
		ЗаблокироватьРазблокироватьДокумент();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура тм_ПриЗакрытииПосле(ЗавершениеРаботы)
		
	//Разблокировка документа от ввода данных
	ЗаблокироватьРазблокироватьДокумент(Ложь);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура тм_ОткрытьЧат(Команда)

	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо записать документ!";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	
	ПараметрыФормыЧата = Новый Структура; 
	ПараметрыФормыЧата.Вставить("ИдентификаторСообщения", Строка(Объект.Ссылка.УникальныйИдентификатор())); 
	ОткрытьФорму("Обработка.тм_Чат.Форма.ФормаПросмотраСообщения", ПараметрыФормыЧата, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры // СоздатьЗаказНаряд()
 
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура тм_ЗапасыНоменклатураПриИзмененииПосле(Элемент)
	
	Номенклатура = Элементы.Запасы.ТекущиеДанные.Номенклатура;
	Если Не Номенклатура.Пустая() Тогда                                        
		тм_ОбщегоНазначенияВызовСервера.ВывестиПроизводителя(Номенклатура, Элементы.Запасы.ТекущиеДанные.тм_Производитель);
		УстановитьТекущегоСотрудника();
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЗаказНаряд(Команда)

	Если Модифицированность 
		Или Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо записать документ";
		Сообщение.Сообщить(); 	
		Возврат;
	КонецЕсли; 
	
	ЗаказНарядСсылка = СоздатьЗаказНарядНаСервере();
	Если Не ЗначениеЗаполнено(ЗаказНарядСсылка) Тогда
		Возврат;		
	КонецЕсли; 
	
	ПоказатьОповещениеПользователя("Создан заказ наряд", ПолучитьНавигационнуюСсылку(ЗаказНарядСсылка), "Открыть созданный заказ-наряд"); 
	
КонецПроцедуры // СоздатьЗаказНаряд()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
 
&НаКлиенте
Процедура тм_УправлениеДоступом()
	
	Если Не тм_ОбщегоНазначенияВызовСервера.ВключенаФункциональнаяОпция("тм_ИспользованиеФункционалаЧата") Тогда	
		тм_РаботаСФормойКлиент.ОтключитьВидимостьЭлементов(ЭтотОбъект, "ФормаОбщаяКомандатм_Чат");	
	КонецЕсли;
		
КонецПроцедуры 
 
&НаСервере
Процедура ДобавитьВставитьЭлементыНаФорму()

	#Область Авто
	
	ЭлементАвтомобиль = тм_ОбщегоНазначенияВызовСервера.ВставитьЭлементНаФорму(ЭтаФорма, 
		"Автомобиль",
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		Элементы.ШапкаЛево,
		"Объект.тм_Автомобиль",
		Элементы.ДоговорИнформация); 
		
	//События элементов
	//ЭлементАвтомобиль.УстановитьДействие("ПриИзменении", "АвтомобильПриИзмененииДанных");
	
	#КонецОбласти
		
	#Область Производитель
	
	ДобавляемыеРеквизиты	= Новый Массив;                   
		
    Реквизит_тм_Производитель = Новый РеквизитФормы("тм_Производитель", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)), "Объект.Запасы",  "Производитель");
	
    ДобавляемыеРеквизиты.Добавить(Реквизит_тм_Производитель);
	
    ИзменитьРеквизиты(ДобавляемыеРеквизиты);		
		
	ЭлементПроизводитель = тм_ОбщегоНазначенияВызовСервера.ВставитьЭлементНаФорму(ЭтаФорма, 
		"Производитель",                                                                                  	
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		ЭтаФорма.Элементы.Запасы,
		"Объект.Запасы.тм_Производитель", Элементы.ЗапасыХарактеристика); 
		
	ЭлементПроизводитель.Заголовок = "Производитель";	
	ЭлементПроизводитель.Доступность = Ложь;	
	
	#КонецОбласти 
	
	#Область Поставщик
	
	ЭлементПоставщик = тм_ОбщегоНазначенияВызовСервера.ВставитьЭлементНаФорму(ЭтаФорма, 
		"Поставщик",
		Тип("ПолеФормы"),
		ВидПоляФормы.ПолеВвода,
		Элементы.Запасы,
		"Объект.Запасы.тм_Поставщик",
		Элементы.ЗапасыГруппаНоменклатура); 
		
	#КонецОбласти
	
	ЭлементЗапасыГруппаНоменклатура = Элементы.Запасы.ПодчиненныеЭлементы[4];
	ЭлементЗапасыГруппаНоменклатура.ФиксацияВТаблице = ФиксацияВТаблице.Нет;
	
	#Область Запасы

	Права = тм_КЭШ.ПолучитьПраваОбъекта("ЗаказПокупателя", Пользователи.ТекущийПользователь());
	Если Права.SA Тогда
		
		Элемент_тм_Сотрудник = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
			"Сотрудник",
			Тип("ПолеФормы"),
			ВидПоляФормы.ПолеВвода,
			ЭтаФорма.Элементы.Запасы,
			"Объект.Запасы.тм_Сотрудник"); 
			
		Элемент_тм_Сотрудник.Доступность = Ложь;	
			
	КонецЕсли; 

	#КонецОбласти 
КонецПроцедуры // ДобавитьВставитьЭлементыНаФорму()

&НаСервере
Процедура ДобавитьКоманды()

	#Область СоздатьЗаказНаряд
	
	// Создадим команды
    Команда				= ЭтаФорма.Команды.Добавить("СоздатьЗаказНаряд");
    Команда.Действие	= "СоздатьЗаказНаряд";
	
    // Создадим кнопку и привяжем к ней команду    	
	КнопкаСписатьБонусы = тм_ОбщегоНазначенияВызовСервера.ДобавитьЭлементНаФорму(ЭтаФорма, 
		"СоздатьЗаказНаряд",
		Тип("КнопкаФормы"),
		Неопределено,
		Элементы.КомандыВажно,
		Неопределено); 	
		
	КнопкаСписатьБонусы.Заголовок	= "Создать заказ-наряд";
	КнопкаСписатьБонусы.ИмяКоманды	= "СоздатьЗаказНаряд";
	КнопкаСписатьБонусы.ЦветФона = WebЦвета.Аквамарин;
	
	#КонецОбласти 
	
	#Область Чат
	// Создадим команды
//    Команда				= ЭтаФорма.Команды.Добавить("тм_ОткрытьЧат");
//    Команда.Действие	= "тм_ОткрытьЧат";
//	
//    // Создадим кнопку и привяжем к ней команду    	
//	КнопкаСписатьБонусы = тм_ОбщегоНазначенияСервер.ДобавитьЭлементНаФорму(ЭтаФорма, 
//		"тм_ОткрытьЧат",
//		Тип("КнопкаФормы"),
//		Неопределено,
//		Элементы.КомандыВажно,
//		Неопределено); 
//		
//	КнопкаСписатьБонусы.Заголовок	= "Чат";
//	КнопкаСписатьБонусы.ИмяКоманды	= "тм_ОткрытьЧат";
//	//КнопкаСписатьБонусы.ЦветФона	= WebЦвета.ЗамшаСветлый;
//	КнопкаСписатьБонусы.Картинка 	= БиблиотекаКартинок.Сообщение;
//	КнопкаСписатьБонусы.Отображение = ОтображениеКнопки.КартинкаИТекст;
	#КонецОбласти 
	
КонецПроцедуры // ДобавитьКоманды()
 
&НаСервере
Процедура ЗаблокироватьРазблокироватьДокумент(Заблокировать = Истина)
	
	Успешно = Истина;
	
	тм_ОбщегоНазначенияВызовСервера.ЗаблокироватьРазблокироватьФорму(ЭтаФорма, Заблокировать, Успешно);		
	ЭтаФорма.КоманднаяПанель.Доступность = Успешно;

КонецПроцедуры // РазблокироватьДокумент()

&НаСервере
Функция СоздатьЗаказНарядНаСервере()
	
	Попытка
		// Доп. сведения		
		УИД_ЗаказНаряда = УправлениеСвойствами.ЗначениеСвойства(Объект.Ссылка, "УИД_ЗаказНаряда");
		Если Не ПустаяСтрока(УИД_ЗаказНаряда) Тогда
			Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(УИД_ЗаказНаряда) Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "По данному заказу покупателя уже создан " + Строка(Документы.ЗаказПокупателя.ПолучитьСсылку(Новый УникальныйИдентификатор(УИД_ЗаказНаряда)));
				Сообщение.Сообщить(); 
				Возврат Неопределено;
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "В дополнительных сведениях указан не корректный идентификатор заказ-наряда!";
				Сообщение.Сообщить(); 
				Возврат Неопределено;
			КонецЕсли; 
		КонецЕсли; 

		ЗаказНаряд = Документы.ЗаказПокупателя.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ЗаказНаряд, Объект,, "Дата, Номер, ВидОперации, ВидЗаказа, СостояниеЗаказа, Автор, Ответственный");
		ЗаказНаряд.Дата = ТекущаяДатаСеанса();
		ЗаказНаряд.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд;
		ЗаказНаряд.СостояниеЗаказа =  Справочники.СостоянияЗаказНарядов.НайтиПоНаименованию("В работе");
		ЗаказНаряд.ВидЗаказа = ЗаполнениеОбъектовУНФ.ПолучитьВидЗаказНаряда();
		ЗаказНаряд.Комментарий = "#Создан документом заказ покупателя " + Объект.Номер;
		ЗаказНаряд.Запасы.Загрузить(Объект.Запасы.Выгрузить());
		ЗаказНаряд.Автор = ПользователиКлиентСервер.ТекущийПользователь();
		ЗаказНаряд.Старт = НачалоДня(ТекущаяДатаСеанса());
		ЗаказНаряд.Финиш = КонецДня(ТекущаяДатаСеанса());
		ЗаказНаряд.Ответственный = СотрудникПользователя();
		ЗаказНаряд.ИспользоватьТовары = Истина;
		
		//ТекущийСотрудник = тм_КЭШ.СотрудникПользователя(Пользователи.ТекущийПользователь());
		//Для каждого СтрЗапас Из ЗаказНаряд.Запасы Цикл
		//	СтрЗапас.тм_Сотрудник = ТекущийСотрудник;
		//КонецЦикла;  
		
		ЗаказНаряд.УстановитьНовыйНомер();
		ЗаказНаряд.Записать();
		
		Объект.Комментарий = ?(ПустаяСтрока(Объект.Комментарий), "#Создан документом заказ-наряд " + ЗаказНаряд.Номер, Объект.Комментарий + " #Создан документом заказ-наряд " + ЗаказНаряд.Номер);
		Записать();
		
		// Доп. сведения
		ТаблицаСвойств = Новый ТаблицаЗначений; 
		ТаблицаСвойств.Колонки.Добавить("Свойство");
		ТаблицаСвойств.Колонки.Добавить("Значение");
		
		НоваяСтрока = ТаблицаСвойств.Добавить();
		НоваяСтрока.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "УИД_ЗаказНаряда");
		НоваяСтрока.Значение = Строка(ЗаказНаряд.Ссылка.УникальныйИдентификатор());
		
		УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(Объект.Ссылка, ТаблицаСвойств);	
		
		Возврат ЗаказНаряд.Ссылка;
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 
		Возврат Неопределено;
	КонецПопытки; 
	
КонецФункции // СоздатьЗаказНарядНаСервере()

&НаСервереБезКонтекста
Функция СотрудникПользователя()
		
	Сотрудник = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиПользователя.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.СотрудникиПользователя КАК СотрудникиПользователя
		|ГДЕ
		|	СотрудникиПользователя.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Сотрудник = Выборка.Сотрудник;
	КонецЦикла;
	
	Возврат Сотрудник;	

КонецФункции // СотрудникПользователя()

&НаСервере
Процедура УстановитьТекущегоСотрудника()

	тм_Сотрудник = ПолучитьТекущегоСотрудникаПользователя();
	Если ЗначениеЗаполнено(тм_Сотрудник) Тогда
		ТекущаяСтрока = Объект.Запасы.НайтиПоИдентификатору(Элементы.Запасы.ТекущаяСтрока);
		ТекущаяСтрока.тм_Сотрудник = тм_Сотрудник;	
	КонецЕсли;  

КонецПроцедуры // УстановитьТекущегоСотрудника()

&НаСервереБезКонтекста
Функция ПолучитьТекущегоСотрудникаПользователя()

	Возврат тм_КЭШ.СотрудникПользователя(Пользователи.ТекущийПользователь());

КонецФункции // ПолучитьТекущегоСотрудникаПользователя()

#КонецОбласти 