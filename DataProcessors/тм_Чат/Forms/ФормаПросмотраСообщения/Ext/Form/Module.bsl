 
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не тм_ОбщегоНазначенияВызовСервера.ВключенаФункциональнаяОпция("тм_ИспользованиеФункционалаЧата") Тогда
			ОбщегоНазначения.СообщитьПользователю("Недостаточно прав",,,, Отказ);
		Возврат;	
	КонецЕсли; 
	
	Если Не ПустаяСтрока(Параметры.ИдентификаторСообщения) Тогда // открывается из документа
		Элементы.СообщенияОтПользователей.Видимость = Ложь;
		ТекстЗапроса = тм_ПереопределяемыйСервер.ПереопределитьТекстЗапросаДинамическогоСписка(ЭтотОбъект.ИмяФормы);
		СообщенияОтПользователей.ТекстЗапроса = ТекстЗапроса;
	Иначе
		СообщенияОтПользователей.Параметры.УстановитьЗначениеПараметра("ПользовательКому", Пользователи.ТекущийПользователь());
	КонецЕсли; 
		 	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Оповестить("ОбновитьСписокЧата");
	ПодключитьОбработчикОжидания("ПрикрепитьОкно", 0.1, Истина);
	Если Не ПустаяСтрока(Параметры.ИдентификаторСообщения) Тогда
		ПодключитьОбработчикОжидания("ОбновитьСписокЧатаИнтервально", 5, Ложь);
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокЧата" Тогда
		Элементы.СообщенияОтПользователей.Обновить();
		мИдентификаторСообщения = ?(ПустаяСтрока(Параметры.ИдентификаторСообщения), Элементы.СообщенияОтПользователей.ТекущиеДанные.ИдентификаторСообщения, Параметры.ИдентификаторСообщения);
		
		СформироватьЧат(мИдентификаторСообщения); 
		ПодключитьОбработчикОжидания("ПрокрутитьЧатВниз", 0.1, Истина);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияКоличествоФайловНажатие(Элемент)
	
	// Очистим файлы если они есть
	Если ТаблицаФайловДляОтправки.Количество() <> 0 Тогда
		ОчиститьВложенныеФайлы();	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СообщенияОтПользователейПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено
		И Элемент.ТекущиеДанные.Свойство("ИдентификаторСообщения") Тогда
		//СформироватьЧат(Элемент.ТекущиеДанные.ИдентификаторСообщения);
		ПодключитьОбработчикОжидания("ПрочитатьСообщения", 0.1, Истина);
	Иначе
		Чат = ""; 
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура СообщенияОтПользователейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	//СформироватьЧат(Элемент.ТекущиеДанные.ИдентификаторСообщения);
	ПодключитьОбработчикОжидания("ПрочитатьСообщения", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьСообщение(Команда)

	//Если Элементы.СообщенияОтПользователей.ТекущиеДанные <> Неопределено
	//	И Элементы.СообщенияОтПользователей.ТекущиеДанные.Свойство("ИдентификаторСообщения") Тогда
	//	ПараметрыОтбора = Новый Структура;
	//	ПараметрыОтбора.Вставить("ИдентификаторСообщения", Элементы.СообщенияОтПользователей.ТекущиеДанные.ИдентификаторСообщения);

	//	ПрочитатьСообщениеНаСервере(ПараметрыОтбора);
	//	Оповестить("ОбновитьСписокЧата");
	//КонецЕсли;
	
	ПрочитатьСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеСобытия.Href) Тогда
		СтрокаСоединенияИнформационнойБазы = СтрокаСоединенияИнформационнойБазы();
		Если СтрНайти(СтрокаСоединенияИнформационнойБазы, "Ref=""dacar_unf""") = 0 Тогда
			//ПодстрокаПоиска =  "e1c://server/server1c/dacar-test/";
			ПодстрокаПоиска =  "e1c://filev/C/1%D0%A1/Bases/test_dacar/";
		Иначе
			ПодстрокаПоиска =  "e1c://server/server1c/dacar_unf/";		
		КонецЕсли; 
		
		ИдентификаторФайла = СтрЗаменить(ДанныеСобытия.Href, ПодстрокаПоиска, "");	
	КонецЕсли;
	
	ДанныеФайлы = ПолучитьДанныеФайла(ИдентификаторФайла, УникальныйИдентификатор);
	Если ДанныеФайлы.Свойство("Адрес") Тогда
		 ПараметрыДиалогаПолученияФайлов = Новый ПараметрыДиалогаПолученияФайлов;
		 ПараметрыДиалогаПолученияФайлов.ВыборКаталога = Истина;
		 ПолучитьФайлССервераАсинх(ДанныеФайлы.Адрес, ДанныеФайлы.Наименование, ПараметрыДиалогаПолученияФайлов);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НовыйЧат(Команда)
	
//	ОткрытьФорму("РегистрСведений.тм_СообщенияПользователям.Форма.ФормаЗаписиНовогоСообщения_старая",, ЭтотОбъект);
	ОткрытьФорму("РегистрСведений.тм_СообщенияПользователям.Форма.ФормаЗаписиСообщенияИлиГруппы",, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Команда)

	Если ПустаяСтрока(ТекстНовогоСообщения) Тогда
		СообщениеПользователю = Новый СообщениеПользователю();
		СообщениеПользователю.Текст			= НСтр("ru = 'Введите сообщение'");
		СообщениеПользователю.ПутьКДанным 	= "ТекстНовогоСообщения";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СообщенияОтПользователей.ТекущиеДанные;
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Период", ТекущаяДата());
	ПараметрыСообщения.Вставить("ИдентификаторСообщения"	, ?(ПустаяСтрока(Параметры.ИдентификаторСообщения), ТекущиеДанные.ИдентификаторСообщения, Параметры.ИдентификаторСообщения));
//	ПараметрыСообщения.Вставить("ПользовательКому"			, ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
	ПараметрыСообщения.Вставить("ПользовательОтКого"		, ПользователиКлиент.ТекущийПользователь());
	ПараметрыСообщения.Вставить("Сообщение"					, ТекстНовогоСообщения);
	ПараметрыСообщения.Вставить("Срочно"					, СрочноеСообщение);
	ПараметрыСообщения.Вставить("ОшибкиОтправки"			, "");	
	
	Если Не ПустаяСтрока(Параметры.ИдентификаторСообщения) Тогда // это чат документа
		ЭтоГруппа = Ложь; 
		НаименованиеГруппы = "";
		ПользовательКому = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	ИначеЕсли ТипЗнч(Элементы.СообщенияОтПользователей.ТекущиеДанные.ПользовательОтКого) <> Тип("СправочникСсылка.Пользователи") Тогда // группа общий чат
		ЭтоГруппа = Истина; 
		НаименованиеГруппы = Элементы.СообщенияОтПользователей.ТекущиеДанные.ПользовательОтКого;
		ПользовательКому = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	Иначе
		ЭтоГруппа = Ложь;	
		НаименованиеГруппы = "";	
		ПользовательКому = Элементы.СообщенияОтПользователей.ТекущиеДанные.ПользовательОтКого;	
	КонецЕсли; 
	
//	ПараметрыСообщения.Вставить("ЭтоГруппа"					, ?(ТипЗнч(Элементы.СообщенияОтПользователей.ТекущиеДанные.ПользовательОтКого) = Тип("СправочникСсылка.Пользователи"), Ложь, Истина));
//	ПараметрыСообщения.Вставить("НаименованиеГруппы"		, ?(ТипЗнч(Элементы.СообщенияОтПользователей.ТекущиеДанные.ПользовательОтКого) = Тип("СправочникСсылка.Пользователи"), "", Элементы.СообщенияОтПользователей.ТекущиеДанные.ПользовательОтКого));
	ПараметрыСообщения.Вставить("ПользовательКому"			, ПользовательКому);
	ПараметрыСообщения.Вставить("ЭтоГруппа"					, ЭтоГруппа);
	ПараметрыСообщения.Вставить("НаименованиеГруппы"		, НаименованиеГруппы);
	
	ОтправитьСообщениеНаСервере(ПараметрыСообщения);
	//
	Если ПустаяСтрока(ПараметрыСообщения.ОшибкиОтправки) Тогда
		ОчиститьВложенныеФайлы(Ложь);
		Оповестить("ОбновитьСписокЧата");
	Иначе
		Сообщить(ПараметрыСообщения.ОшибкиОтправки);
	КонецЕсли; 

	//СформироватьЧат(ТекущиеДанные.ИдентификаторСообщения);
	Элементы.ТекстВвода.ОбновитьТекстРедактирования();	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПрикрепитьФайлы(Команда)
	
	// Очистим файлы если они есть
	Если ТаблицаФайловДляОтправки.Количество() <> 0 Тогда
		Ответ = Ждать ВопросАсинх("Очистить прикрепленные файлы?", РежимДиалогаВопрос.ДаНет,,, "Подтвердить удаление");
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ТаблицаФайловДляОтправки.Очистить();
			Элементы.ДекорацияКоличествоФайлов.Заголовок = "";
		КонецЕсли; 
	КонецЕсли; 
	
	ПараметрыДиалогаПомещенияФайлов = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалогаПомещенияФайлов.Заголовок = "Выберите файлы";
	ПараметрыДиалогаПомещенияФайлов.МножественныйВыбор = Истина;
	
	ПомещенныеФайлы = Ждать ПоместитьФайлыНаСерверАсинх(,, ПараметрыДиалогаПомещенияФайлов, УникальныйИдентификатор);
	Если ПомещенныеФайлы <> Неопределено Тогда
		Для каждого СтрПомещенныйФайл Из ПомещенныеФайлы Цикл
			СтрТаблицыФайлы 				   = ТаблицаФайловДляОтправки.Добавить();
			СтрТаблицыФайлы.Адрес 			   = СтрПомещенныйФайл.Адрес;
			СтрТаблицыФайлы.ИдентификаторФайла = Строка(СтрПомещенныйФайл.СсылкаНаФайл.ИдентификаторФайла);
			СтрТаблицыФайлы.Имя                = СтрПомещенныйФайл.СсылкаНаФайл.Имя;
			СтрТаблицыФайлы.Расширение         = СтрПомещенныйФайл.СсылкаНаФайл.Расширение;
			СтрТаблицыФайлы.ПутьКФайлу         = СтрПомещенныйФайл.СсылкаНаФайл.Файл.ПолноеИмя;
			СтрТаблицыФайлы.Размер	           = СтрПомещенныйФайл.СсылкаНаФайл.Файл.Размер();
		КонецЦикла; 
		
		ТекстЗаголовка = "" + ТаблицаФайловДляОтправки.Количество();
		//ЗаголовокДекорацииКоличестваФайлов = Новый ФорматированнаяСтрока(ТекстЗаголовка,, WebЦвета.Зеленый);
		
		Элементы.ДекорацияКоличествоФайлов.Заголовок = ТекстЗаголовка ;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Асинх Процедура УдалитьЧат(Команда)
	
	Ответ = Ждать ВопросАсинх("В данном релизе будет удален чат у каждого участника! Продолжить?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		мИдентификаторСообщения = Элементы.СообщенияОтПользователей.ТекущиеДанные.ИдентификаторСообщения;
		УдалитьЧатНаСервере(мИдентификаторСообщения);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПрочитатьСообщениеНаСервере(ПараметрыОтбора)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тм_СообщенияПользователям.Период КАК Период,
		|	тм_СообщенияПользователям.ИдентификаторСообщения КАК ИдентификаторСообщения
		|ИЗ
		|	РегистрСведений.тм_СообщенияПользователям КАК тм_СообщенияПользователям
		|ГДЕ
		|	тм_СообщенияПользователям.ИдентификаторСообщения = &ИдентификаторСообщения
		|	И тм_СообщенияПользователям.ПользовательОтКого <> &ПользовательОтКого
		|	И НЕ тм_СообщенияПользователям.Прочитано";
	
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ПараметрыОтбора.ИдентификаторСообщения);
	Запрос.УстановитьПараметр("ПользовательОтКого", Пользователи.ТекущийПользователь());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;   

	ПараметрыОтбора.Вставить("Выборка", РезультатЗапроса.Выбрать());
	
	РегистрыСведений.тм_СообщенияПользователям.ПрочитатьСообщение(ПараметрыОтбора);
	
	ПараметрыОтбора.Удалить("Выборка");	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЧат(ИдентификаторСообщения)

	ТекущийПользователь = Пользователи.ТекущийПользователь();

	ПолноеИмяРС 		= Метаданные.РегистрыСведений.тм_СообщенияПользователям.ПолноеИмя();						  
	ШапкаЧата           = тм_КЭШ.ПолучитьМакет(ПолноеИмяРС, "ШапкаЧата").ПолучитьТекст(); 
	СообщениеОтМеня		= тм_КЭШ.ПолучитьМакет(ПолноеИмяРС, "СообщениеОтМеня").ПолучитьТекст(); 
	СообщениеДляМеня	= тм_КЭШ.ПолучитьМакет(ПолноеИмяРС, "СообщениеДляМеня").ПолучитьТекст();
	ПодвалЧата          = тм_КЭШ.ПолучитьМакет(ПолноеИмяРС, "ПодвалЧата").ПолучитьТекст();
	ДатаПереписки       = тм_КЭШ.ПолучитьМакет(ПолноеИмяРС, "ДатаПереписки").ПолучитьТекст();
	СтрокаФайла			= тм_КЭШ.ПолучитьМакет(ПолноеИмяРС, "СтрокаДобавленногоФайла").ПолучитьТекст();
	СтрокаФИО			= тм_КЭШ.ПолучитьМакет(ПолноеИмяРС, "СтрокаПолноеИмяПользователя").ПолучитьТекст();
	
	Чат = ШапкаЧата; 
	
	#Область СтарыйКод
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	тм_СообщенияПользователям.Период КАК Период,
	//	|	тм_СообщенияПользователям.ПользовательКому КАК ПользовательКому,
	//	|	тм_СообщенияПользователям.Сообщение КАК Сообщение,
	//	|	тм_СообщенияПользователям.Прочитано КАК Прочитано,
	//	|	тм_СообщенияПользователям.ДатаПрочтения КАК ДатаПрочтения,
	//	|	тм_СообщенияПользователям.ПользовательОтКого КАК ПользовательОтКого,
	//	|	тм_СообщенияПользователям.ИдентификаторСообщения КАК ИдентификаторСообщения,
	//	|	тм_СообщенияПользователям.Срочно КАК Срочно,
	//	|	ЕСТЬNULL(тм_Файлы.Наименование, """") КАК НаименованиеФайла
	//	|ИЗ
	//	|	РегистрСведений.тм_СообщенияПользователям КАК тм_СообщенияПользователям
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.тм_Файлы КАК тм_Файлы
	//	|		ПО тм_СообщенияПользователям.ИдентификаторСообщения = тм_Файлы.ИдентификаторВладелецФайла
	//	|			И тм_СообщенияПользователям.Период = тм_Файлы.ДатаЗаписи
	//	|ГДЕ
	//	|	тм_СообщенияПользователям.ИдентификаторСообщения = &ИдентификаторСообщения
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Период";
	//
	//Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//мДатаПереписки = "";
	//Если Не РезультатЗапроса.Пустой() Тогда
	//	
	//	Пока Выборка.Следующий() Цикл
	//		ТекущаяДатаСтрокой = Формат(Выборка.Период, "ДФ=dd.MM.yyyy");
	//		Если мДатаПереписки <> ТекущаяДатаСтрокой Тогда
	//			мДатаПереписки = ТекущаяДатаСтрокой;
	//			Чат = Чат + СтрЗаменить(ДатаПереписки, "%ДатаПереписки", мДатаПереписки);  
	//		КонецЕсли;                                                                                                         
	//		
	//		Если Выборка.ПользовательОтКого = ТекущийПользователь Тогда
	//			СообщениеОтМеняПодг = СтрЗаменить(СообщениеОтМеня	 , "%Сообщение"		, Выборка.Сообщение);
	//			мСообщениеОтМеня 	= СтрЗаменить(СообщениеОтМеняПодг, "%ВремяСообщения", Формат(Выборка.Период, "ДФ=HH:mm"));
	//			
	//			// Файлы
	//			мСтрокаФайла		= СтрЗаменить(СтрокаФайла,  "%КлассПоложенияФайла", "image-right");
	//			мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%НаименованиеФайла", Выборка.НаименованиеФайла);
	//			
	//			мСообщениеОтМеня 	= СтрЗаменить(мСообщениеОтМеня, "%Файл", мСтрокаФайла);
	//				
	//			Чат = Чат + мСообщениеОтМеня;
	//		Иначе
	//			СообщениеДляМеняПодг 	= СтрЗаменить(СообщениеДляМеня, "%Сообщение", Выборка.Сообщение);
	//			мСообщениеДляМеняПодг 	= СтрЗаменить(СообщениеДляМеняПодг, "%ВремяСообщения", Формат(Выборка.Период, "ДФ=HH:mm"));				
	//			
	//			// Файлы
	//			мСтрокаФайла		= СтрЗаменить(СтрокаФайла,  "%КлассПоложенияФайла", "image-left");
	//			мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%НаименованиеФайла", Выборка.НаименованиеФайла);
	//			
	//			мСообщениеОтМеня 	= СтрЗаменить(мСообщениеОтМеня, "%Файл", мСтрокаФайла);
	//				
	//			
	//			Чат = Чат + мСообщениеДляМеняПодг;
	//		КонецЕсли; 	
	//		
	//	КонецЦикла;
	//	
	//	Чат = Чат + ПодвалЧата;
	//	
	//КонецЕсли; 
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	тм_СообщенияПользователям.Период КАК Период,
	//	|	тм_СообщенияПользователям.ПользовательКому КАК ПользовательКому,
	//	|	тм_СообщенияПользователям.Сообщение КАК Сообщение,
	//	|	тм_СообщенияПользователям.Прочитано КАК Прочитано,
	//	|	тм_СообщенияПользователям.ДатаПрочтения КАК ДатаПрочтения,
	//	|	тм_СообщенияПользователям.ПользовательОтКого КАК ПользовательОтКого,
	//	|	тм_СообщенияПользователям.ИдентификаторСообщения КАК ИдентификаторСообщения,
	//	|	тм_СообщенияПользователям.Срочно КАК Срочно,
	//	|	ЕСТЬNULL(тм_Файлы.Наименование, """") КАК НаименованиеФайла,
	//	|	ЕСТЬNULL(тм_Файлы.ИдентификаторВладелецФайла, """") КАК ИдентификаторВладелецФайла
	//	|ИЗ
	//	|	РегистрСведений.тм_СообщенияПользователям КАК тм_СообщенияПользователям
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.тм_Файлы КАК тм_Файлы
	//	|		ПО тм_СообщенияПользователям.ИдентификаторСообщения = тм_Файлы.ИдентификаторВладелецФайла
	//	|			И тм_СообщенияПользователям.Период = тм_Файлы.ДатаЗаписи
	//	|ГДЕ
	//	|	тм_СообщенияПользователям.ИдентификаторСообщения = &ИдентификаторСообщения
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Период
	//	|ИТОГИ ПО
	//	|	ИдентификаторСообщения,
	//	|	ИдентификаторВладелецФайла";
	//
	//Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	// Если Не РезультатЗапроса.Пустой() Тогда
	//	мДатаПереписки = "";

	//	ВыборкаИдентификаторСообщения = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	//	Пока ВыборкаИдентификаторСообщения.Следующий() Цикл
	//		
	//		ВыборкаИдентификаторВладелецФайла = ВыборкаИдентификаторСообщения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//		ТекущаяДатаСтрокой = Формат(ВыборкаИдентификаторСообщения.Период, "ДФ=dd.MM.yyyy");
	//		Если мДатаПереписки <> ТекущаяДатаСтрокой Тогда
	//			мДатаПереписки = ТекущаяДатаСтрокой;
	//			Чат = Чат + СтрЗаменить(ДатаПереписки, "%ДатаПереписки", мДатаПереписки);  
	//		КонецЕсли;                                                                                                         
	//		
	//		Если ВыборкаИдентификаторСообщения.ПользовательОтКого = ТекущийПользователь Тогда
	//			СообщениеОтМеняПодг = СтрЗаменить(СообщениеОтМеня	 , "%Сообщение"		, ВыборкаИдентификаторСообщения.Сообщение);
	//			мСообщениеОтМеня 	= СтрЗаменить(СообщениеОтМеняПодг, "%ВремяСообщения", Формат(ВыборкаИдентификаторСообщения.Период, "ДФ=HH:mm"));
	//			
	//			ВыборкаИдентификаторВладелецФайла = ВыборкаИдентификаторСообщения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//			
	//			Пока ВыборкаИдентификаторВладелецФайла.Следующий() Цикл
	//									
	//				Выборка = ВыборкаИдентификаторВладелецФайла.Выбрать();
	//				
	//				Пока Выборка.Следующий() Цикл
	//					// Файлы
	//					мСтрокаФайла		= СтрЗаменить(СтрокаФайла,  "%КлассПоложенияФайла", "image-right");
	//					мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%НаименованиеФайла", Выборка.НаименованиеФайла);
	//					
	//					мСообщениеОтМеня 	= СтрЗаменить(мСообщениеОтМеня, "%Файл", мСтрокаФайла);
	//				КонецЦикла;
	//			КонецЦикла;
	//			
	//			Чат = Чат + мСообщениеОтМеня;
	//		Иначе
	//			СообщениеДляМеняПодг 	= СтрЗаменить(СообщениеДляМеня, "%Сообщение", Выборка.Сообщение);
	//			мСообщениеДляМеняПодг 	= СтрЗаменить(СообщениеДляМеняПодг, "%ВремяСообщения", Формат(Выборка.Период, "ДФ=HH:mm"));				
	//			Пока ВыборкаИдентификаторВладелецФайла.Следующий() Цикл
	//				
	//				Выборка = ВыборкаИдентификаторВладелецФайла.Выбрать();
	//				
	//				Пока Выборка.Следующий() Цикл
	//					
	//					// Файлы
	//					мСтрокаФайла		= СтрЗаменить(СтрокаФайла,  "%КлассПоложенияФайла", "image-left");
	//					мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%НаименованиеФайла", Выборка.НаименованиеФайла);
	//					
	//					мСообщениеОтМеня 	= СтрЗаменить(мСообщениеОтМеня, "%Файл", мСтрокаФайла);
	//				КонецЦикла;
	//			КонецЦикла;
	//			
	//			Чат = Чат + мСообщениеДляМеняПодг;
	//		КонецЕсли; 	
	//		
	//	КонецЦикла;
	//	
	//	Чат = Чат + ПодвалЧата;

	//КонецЕсли; 
	#КонецОбласти
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тм_СообщенияПользователям.ИдентификаторСообщения КАК ИдентификаторСообщения,
		|	тм_СообщенияПользователям.Период КАК Период,
		|	тм_СообщенияПользователям.ПользовательКому КАК ПользовательКому,
		|	тм_СообщенияПользователям.Сообщение КАК Сообщение,
		|	тм_СообщенияПользователям.Прочитано КАК Прочитано,
		|	тм_СообщенияПользователям.ДатаПрочтения КАК ДатаПрочтения,
		|	тм_СообщенияПользователям.ПользовательОтКого КАК ПользовательОтКого,
		|	тм_СообщенияПользователям.Срочно КАК Срочно,
		|	тм_СообщенияПользователям.ЭтоГруппа КАК ЭтоГруппа,
		|	тм_СообщенияПользователям.Документ КАК Документ,
		|	ВЫБОР
		|		КОГДА тм_НастройкиЧата.Псевдоним ЕСТЬ NULL
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(тм_СообщенияПользователям.ПользовательОтКого)
		|		ИНАЧЕ тм_НастройкиЧата.Псевдоним
		|	КОНЕЦ КАК ФИООтКого
		|ИЗ
		|	РегистрСведений.тм_СообщенияПользователям КАК тм_СообщенияПользователям
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.тм_НастройкиЧата КАК тм_НастройкиЧата
		|		ПО (тм_СообщенияПользователям.ПользовательОтКого = тм_НастройкиЧата.Владелец)
		|ГДЕ
		|	тм_СообщенияПользователям.ИдентификаторСообщения = &ИдентификаторСообщения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тм_СообщенияПользователям.ИдентификаторСообщения КАК ИдентификаторСообщения,
		|	ЕСТЬNULL(тм_Файлы.ИдентификаторВладелецФайла, """") КАК ИдентификаторВладелецФайла,
		|	тм_СообщенияПользователям.Период КАК Период,
		|	тм_СообщенияПользователям.ПользовательКому КАК ПользовательКому,
		|	тм_СообщенияПользователям.Сообщение КАК Сообщение,
		|	тм_СообщенияПользователям.Прочитано КАК Прочитано,
		|	тм_СообщенияПользователям.ДатаПрочтения КАК ДатаПрочтения,
		|	тм_СообщенияПользователям.ПользовательОтКого КАК ПользовательОтКого,
		|	тм_СообщенияПользователям.Срочно КАК Срочно,
		|	ЕСТЬNULL(тм_Файлы.Наименование, """") КАК НаименованиеФайла,
		|	тм_Файлы.ИдентификаторФайла КАК ИдентификаторФайла
		|ИЗ
		|	РегистрСведений.тм_СообщенияПользователям КАК тм_СообщенияПользователям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.тм_Файлы КАК тм_Файлы
		|		ПО тм_СообщенияПользователям.ИдентификаторСообщения = тм_Файлы.ИдентификаторВладелецФайла
		|		И тм_СообщенияПользователям.Период = тм_Файлы.ДатаЗаписи
		|ГДЕ
		|	тм_СообщенияПользователям.ИдентификаторСообщения = &ИдентификаторСообщения";
	
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[0].Выбрать();
	ТаблицаФайлов = РезультатЗапроса[1].Выгрузить(); 
	
	мДатаПереписки = "";
	Пока Выборка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаИдентификаторСообщения
		ЭтоГруппа = Выборка.ЭтоГруппа Или ЗначениеЗаполнено(Выборка.Документ);
		ТекущаяДатаСтрокой = Формат(Выборка.Период, "ДФ=dd.MM.yyyy");
		Если мДатаПереписки <> ТекущаяДатаСтрокой Тогда
			мДатаПереписки = ТекущаяДатаСтрокой;
			Чат = Чат + СтрЗаменить(ДатаПереписки, "%ДатаПереписки", мДатаПереписки);  
		КонецЕсли;                                                                                                         
		
		Если Выборка.ПользовательОтКого = ТекущийПользователь Тогда
			СообщениеОтМеняПодг = СтрЗаменить(СообщениеОтМеня	 , "%Сообщение"		, Выборка.Сообщение);
			мСообщениеОтМеня 	= СтрЗаменить(СообщениеОтМеняПодг, "%ВремяСообщения", Формат(Выборка.Период, "ДФ=HH:mm"));
			
			// ФИО
			Если ЭтоГруппа Тогда
				ПредставлениеФИО = СтрЗаменить(СтрокаФИО, "%КлассПоложенияФИО", "fullName-right");  
				ПредставлениеФИО = СтрЗаменить(ПредставлениеФИО, "%ФИО", Выборка.ФИООтКого);  
			Иначе
				ПредставлениеФИО = "";
			КонецЕсли; 
			
			мСообщениеОтМеня 	= СтрЗаменить(мСообщениеОтМеня, "%ФИО", ПредставлениеФИО);
			
			// Срочное сообщение
			КлассСрочно = ?(Выборка.Срочно,  "urgently", "");
			мСообщениеОтМеня = СтрЗаменить(мСообщениеОтМеня, "%Срочно", КлассСрочно);
			
			// Файлы
			НайденныеСтрокиФайлов = ТаблицаФайлов.НайтиСтроки(Новый Структура("Период", Выборка.Период));
			Если НайденныеСтрокиФайлов.Количество() <> 0 Тогда
				Для каждого СтрФайлыСообщения Из НайденныеСтрокиФайлов Цикл
					мСтрокаФайла		= СтрЗаменить(СтрокаФайла,  "%КлассПоложенияФайла", "image-right");
					мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%НаименованиеФайла", СтрФайлыСообщения.НаименованиеФайла);
					мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%ИдентификаторФайла", СтрФайлыСообщения.ИдентификаторФайла);
					
					мСообщениеОтМеня 	= СтрЗаменить(мСообщениеОтМеня, "%Файл", мСтрокаФайла);
				КонецЦикла; 
			Иначе
//				мСтрокаФайла		= СтрЗаменить(СтрокаФайла,  "%КлассПоложенияФайла", "image-right");
//				мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%НаименованиеФайла", "");
				
				мСообщениеОтМеня 	= СтрЗаменить(мСообщениеОтМеня, "%Файл", "");
			КонецЕсли; 
			Чат = Чат + мСообщениеОтМеня;
		Иначе
			СообщениеДляМеняПодг 	= СтрЗаменить(СообщениеДляМеня, "%Сообщение", Выборка.Сообщение);
			мСообщениеДляМеняПодг 	= СтрЗаменить(СообщениеДляМеняПодг, "%ВремяСообщения", Формат(Выборка.Период, "ДФ=HH:mm"));				
			
			// ФИО
			Если ЭтоГруппа Тогда
				ПредставлениеФИО = СтрЗаменить(СтрокаФИО, "%КлассПоложенияФИО", "fullName-left");  
				ПредставлениеФИО = СтрЗаменить(ПредставлениеФИО, "%ФИО", Выборка.ФИООтКого);  
			Иначе
				ПредставлениеФИО = "";
			КонецЕсли; 
			
			мСообщениеДляМеняПодг 	= СтрЗаменить(мСообщениеДляМеняПодг, "%ФИО", ПредставлениеФИО);
			
			// Срочное сообщение
			КлассСрочно = ?(Выборка.Срочно,  "urgently", "");
			мСообщениеДляМеняПодг 	= СтрЗаменить(мСообщениеДляМеняПодг, "%Срочно", КлассСрочно);
			
			// Файлы
			НайденныеСтрокиФайлов = ТаблицаФайлов.НайтиСтроки(Новый Структура("Период", Выборка.Период));
			Если НайденныеСтрокиФайлов.Количество() <> 0 Тогда
				Для каждого СтрФайлыСообщения Из НайденныеСтрокиФайлов Цикл
					мСтрокаФайла		= СтрЗаменить(СтрокаФайла,  "%КлассПоложенияФайла", "image-left");
					мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%НаименованиеФайла", СтрФайлыСообщения.НаименованиеФайла);
					мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%ИдентификаторФайла", СтрФайлыСообщения.ИдентификаторФайла);
					
					мСообщениеДляМеняПодг 	= СтрЗаменить(мСообщениеДляМеняПодг, "%Файл", мСтрокаФайла);
				КонецЦикла;  
			Иначе
//				мСтрокаФайла		= СтрЗаменить(СтрокаФайла,  "%КлассПоложенияФайла", "image-left");
//				мСтрокаФайла 		= СтрЗаменить(мСтрокаФайла, "%НаименованиеФайла", "");
				
				мСообщениеДляМеняПодг 	= СтрЗаменить(мСообщениеДляМеняПодг, "%Файл", "");
			КонецЕсли; 
			
			Чат = Чат + мСообщениеДляМеняПодг;
		КонецЕсли; 
		
	КонецЦикла;
	 
	Чат = Чат + ПодвалЧата;
	
	// Приберемся
	Чат = СтрЗаменить(Чат, "%Файл", "");
	
КонецПроцедуры // СформироватьЧат()

&НаСервереБезКонтекста
Процедура УдалитьЧатНаСервере(мИдентификаторСообщения)
		
	РегистрыСведений.тм_СообщенияПользователям.ПоместитьВАрхив(мИдентификаторСообщения);	

КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщениеНаСервере(ПараметрыСообщения)
	
	//Добавим файлы,если они есть
	Если ТаблицаФайловДляОтправки.Количество() <> 0 Тогда
		мТаблицаФайловДляОтправки = РеквизитФормыВЗначение("ТаблицаФайловДляОтправки");
	    АдресВоВрХранилище = ПоместитьВоВременноеХранилище(мТаблицаФайловДляОтправки, УникальныйИдентификатор);
	Иначе
		АдресВоВрХранилище = Неопределено;
	КонецЕсли;
	
	ПараметрыСообщения.Вставить("Файлы", АдресВоВрХранилище);
	ПараметрыСообщения.Вставить("Документ", ?(ПустаяСтрока(Параметры.ИдентификаторСообщения), Документы.ЗаказПокупателя.ПустаяСсылка(), Документы.ЗаказПокупателя.ПолучитьСсылку(Новый УникальныйИдентификатор(ПараметрыСообщения.ИдентификаторСообщения))));
	
	РегистрыСведений.тм_СообщенияПользователям.ОтправитьСообщение(ПараметрыСообщения);
	
	ТекстНовогоСообщения = "";
	СрочноеСообщение = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьСообщения()
	
	Если Элементы.СообщенияОтПользователей.ТекущиеДанные <> Неопределено
		И Элементы.СообщенияОтПользователей.ТекущиеДанные.Свойство("ИдентификаторСообщения") Тогда
		ИдентификаторСообщения = Элементы.СообщенияОтПользователей.ТекущиеДанные.ИдентификаторСообщения;
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСообщения", ИдентификаторСообщения);
		
		ПрочитатьСообщениеНаСервере(ПараметрыОтбора);
		Оповестить("ОбновитьСписокЧата");
	КонецЕсли;
	
КонецПроцедуры // ПрочитатьСообщения()

&НаКлиенте
Процедура ПрокрутитьЧатВниз()

	Элементы.Чат.Документ.body.scrollTop = Элементы.Чат.Документ.body.scrollHeight + 9999;

КонецПроцедуры // ПрокрутитьЧатВниз()

&НаКлиенте
Асинх Процедура ОчиститьВложенныеФайлы(ПоказатьВопрос = Истина)
	
	Если ПоказатьВопрос Тогда
		Ответ = Ждать ВопросАсинх("Очистить прикрепленные файлы?", РежимДиалогаВопрос.ДаНет,,, "Подтвердить удаление");
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ТаблицаФайловДляОтправки.Очистить();
			Элементы.ДекорацияКоличествоФайлов.Заголовок = "";
		КонецЕсли; 
	Иначе
		ТаблицаФайловДляОтправки.Очистить();
		Элементы.ДекорацияКоличествоФайлов.Заголовок = "";
	КонецЕсли; 
	
КонецПроцедуры // ОчиститьВложенныеФайлы()

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ИдентификаторФайла, УникальныйИдентификаторФормы)

	СтруктураДанных = Новый Структура("Наименование"); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тм_Файлы.Наименование КАК Наименование,
		|	тм_Файлы.ФайлХранилище КАК ФайлХранилище
		|ИЗ
		|	Справочник.тм_Файлы КАК тм_Файлы
		|ГДЕ
		|	тм_Файлы.ИдентификаторФайла = &ИдентификаторФайла";
	
	Запрос.УстановитьПараметр("ИдентификаторФайла", ИдентификаторФайла);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка);	
		
		ДД = Выборка.ФайлХранилище.Получить();
		Адрес = ПоместитьВоВременноеХранилище(ДД, УникальныйИдентификаторФормы);
		
		СтруктураДанных.Вставить("Адрес", Адрес);
	КонецЕсли;
	
	Возврат СтруктураДанных;	

КонецФункции // ДанныеФайлыСервер()

&НаКлиенте
Процедура ПрикрепитьОкно()
	
	Попытка
		WSHShell = Новый COMОбъект("WScript.Shell");
		WSHShell.SendKeys("%(-)");
		
		Если ПустаяСтрока(Параметры.ИдентификаторСообщения) Тогда // чат открыт не из документа
			WSHShell.SendKeys("{DOWN 2}");
		Иначе
			WSHShell.SendKeys("{DOWN 1}");
		КонецЕсли;
		
		WSHShell.SendKeys("{RIGHT}");
		WSHShell.SendKeys("{DOWN 3}");
		WSHShell.SendKeys("{ENTER}");
	Исключение
	КонецПопытки; 
	
КонецПроцедуры // Прикрепить()

&НаКлиенте
Процедура ОбновитьСписокЧатаИнтервально()
	Оповестить("ОбновитьСписокЧата");	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГраницы()
    
 	ПозицияОкончания  = СтрДлина(ТекстНовогоСообщения) + 1;
	Элементы.ТекстВвода.УстановитьГраницыВыделения(ПозицияОкончания, ПозицияОкончания);  
    
КонецПроцедуры

#КонецОбласти  
