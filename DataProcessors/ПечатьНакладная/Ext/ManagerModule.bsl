
&ИзменениеИКонтроль("СформироватьПФ")
Функция тм_СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати, ВключаяУслуги)
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;

	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ДанныеПечати		= Новый Структура;
	ЕстьТЧЗапасы		= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаЗапасы") <> Неопределено);
	ЕстьТЧРаботыУслуги	= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаРаботыУслуги") <> Неопределено);
	ПредставлениеСкидки = Константы.ПредставлениеСкидкиВПечатнойФорме.Получить();

	Для Каждого ДанныеОбъекта Из ДанныеОбъектовПечати Цикл

		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало,
			ДанныеПечати);

		СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(ДанныеОбъекта.Организация,
			ДанныеОбъекта.ДатаДокумента, , );
		СведенияОбКонтрагенте = ПечатьДокументовУНФ.СведенияОЮрФизЛице(ДанныеОбъекта.Контрагент,
			ДанныеОбъекта.ДатаДокумента, , );
		// Доставка
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеОбъекта, "АдресДоставки")
			И НЕ ПустаяСтрока(ДанныеОбъекта.АдресДоставки) Тогда
			СведенияОбКонтрагенте.Вставить("ФактическийАдрес", ДанныеОбъекта.АдресДоставки);
		КонецЕсли;
		// Конец Доставка
		
		// Заголовок
		ЛоготипЗаполнен = ЗначениеЗаполнено(ДанныеОбъекта.ФайлЛоготип);
		ИмяМакета = ?(ЛоготипЗаполнен, "ЗаголовокСЛоготипом", "ЗаголовокБезЛоготипа");

		ОбластьЗаголовок = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяМакета, "", Ошибки);
		Если ОбластьЗаголовок <> Неопределено Тогда

			ШаблонЗаголовка = НСтр("ru ='%1 № %2 от %3'");
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента,
				ДанныеОбъекта.Номер, ДанныеОбъекта.Префикс);
			ДанныеПечати.Вставить("ТекстЗаголовка", СтрШаблон(ШаблонЗаголовка, ДанныеОбъекта.ПредставлениеРегистратора,
				НомерДокумента, Формат(ДанныеОбъекта.ДатаДокумента, "ДЛФ=DD")));
			ДанныеПечати.Вставить("ВидОперации", ДанныеОбъекта.ВидОперации);

			Если ЛоготипЗаполнен Тогда

				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя картинки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("Логотип", "ФайлЛоготип");

				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластьЗаголовок, ДанныеОбъекта, ПодписиИФаксимиле,
					Ошибки);

			КонецЕсли;

			ОбластьЗаголовок.Параметры.Заполнить(ДанныеПечати);
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок,
				ДанныеОбъекта.Ссылка);
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);

		КонецЕсли;
		#Вставка
		// ++ тм
		Если тм_ОбщегоНазначенияВызовСервера.ВключенаФункциональнаяОпция("тм_ИспользоватьБонуснуюСистему") Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("тм_БонуснаяПрограмма");
			ДанныеБП = тм_ОбщегоНазначенияВызовСервера.ПолучитьДанныеПоБонуснойПрограмме(ДанныеОбъекта);	
			
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеБП);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);		
		КонецЕсли;  
		// -- тм
		#КонецВставки
		
		// Субъекты (поставщик, покупатель)
		ОбластьОписаниеСубъекта = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ОписаниеСубъекта", "", Ошибки);
		Если ОбластьОписаниеСубъекта <> Неопределено Тогда

			ДанныеПечати.Очистить();
			ДанныеПечати.Вставить("НаименованиеСубъекта", НСтр("ru ='Поставщик'"));
			ДанныеПечати.Вставить("ПредставлениеСубъекта", ПечатьДокументовУНФ.ОписаниеОрганизации(
				СведенияОбОрганизации, "ПолноеНаименование,ФактическийАдрес"));
			ОбластьОписаниеСубъекта.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьОписаниеСубъекта);

			ДанныеПечати.Очистить();
			ДанныеПечати.Вставить("НаименованиеСубъекта", НСтр("ru ='Покупатель'"));
			ДанныеПечати.Вставить("ПредставлениеСубъекта", ПечатьДокументовУНФ.ОписаниеОрганизации(
				СведенияОбКонтрагенте, "ПолноеНаименование,ФактическийАдрес"));
			ОбластьОписаниеСубъекта.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьОписаниеСубъекта);

		КонецЕсли;
		
		// Табличная часть
		ЕстьСкидки = ДанныеОбъекта.ТаблицаЗапасы.Итог("ЕстьСкидка") <> 0;

		ИмяОбласти = ?(ЕстьСкидки, "ШапкаТаблицыСоСкидкой", "ШапкаТаблицы");
		ОбластьШапкаТаблицы = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки);
		Если ОбластьШапкаТаблицы <> Неопределено Тогда

			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);

		КонецЕсли;

		Итоги = Новый Структура;
		Итоги.Вставить("НомерСтроки", 0);
		Итоги.Вставить("Количество", 0);
		Итоги.Вставить("Сумма", 0);
		Итоги.Вставить("СуммаНДС", 0);
		Итоги.Вставить("Всего", 0);
		Итоги.Вставить("ЕстьСкидки", ЕстьСкидки);
		Итоги.Вставить("СкидкаПоСтроке", 0);
		Итоги.Вставить("СкидкаПоДокументу", 0);
		Итоги.Вставить("ПредставлениеСкидки", ПредставлениеСкидки);
		Итоги.Вставить("ЕстьСтавкаНольПроцентов", Ложь);
		// Наборы
		Итоги.Вставить("ЕстьНаборы", ДанныеОбъекта.ТаблицаЗапасы.Колонки.Найти("НоменклатураНабора") <> Неопределено);

		ИмяОбласти = ?(Итоги.ЕстьСкидки, "СтрокаСоСкидкой", "Строка");
		ОбластьСтрока = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки);
		Если ОбластьСтрока <> Неопределено Тогда

			ПараметрыНоменклатуры = Новый Структура;

			Если ЕстьТЧЗапасы Тогда

				Для Каждого СтрокаТабличнойЧасти Из ДанныеОбъекта.ТаблицаЗапасы Цикл

					Если Не ВключаяУслуги И СтрокаТабличнойЧасти.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас
						И СтрокаТабличнойЧасти.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда

						Продолжить;

					КонецЕсли;

					Если СтрокаТабличнойЧасти.Количество = 0 Тогда

						Продолжить;

					КонецЕсли;

					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ДанныеПечати,
						ПараметрыНоменклатуры, Итоги, ДанныеОбъекта);
					ОбластьСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьСтрока);
					
					// Наборы
					Если Итоги.ЕстьНаборы Тогда
						НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьСтрока,
							СтрокаТабличнойЧасти);
					КонецЕсли;
					// Конец Наборы

				КонецЦикла;

			КонецЕсли;

			Если ЕстьТЧРаботыУслуги И ВключаяУслуги Тогда

				Для Каждого СтрокаТабличнойЧасти Из ДанныеОбъекта.ТаблицаРаботыУслуги Цикл

					Если СтрокаТабличнойЧасти.Количество = 0 Тогда

						Продолжить;

					КонецЕсли;

					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ДанныеПечати,
						ПараметрыНоменклатуры, Итоги, ДанныеОбъекта);
					ОбластьСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьСтрока);
					
					// Наборы
					Если Итоги.ЕстьНаборы Тогда
						НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьСтрока,
							СтрокаТабличнойЧасти);
					КонецЕсли;
					// Конец Наборы

				КонецЦикла;

			КонецЕсли;

		КонецЕсли;
		
		// Итого
		ОбластьИтого = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Итого", "", Ошибки);
		Если ОбластьИтого <> Неопределено Тогда

			ДанныеПечати.Очистить();
			ДанныеПечати.Вставить("Всего", ПечатьДокументовУНФ.ФорматСумм(Итоги.Сумма));
			ДанныеПечати.Вставить("ЗаголовокНДС", ПечатьДокументовУНФ.ПредставлениеЗаголовкаНДС(
				Итоги.СуммаНДС, ДанныеОбъекта.СуммаВключаетНДС, Ложь,
				Итоги.ЕстьСтавкаНольПроцентов));
			ДанныеПечати.Вставить("ВсегоНДС", ?(Итоги.СуммаНДС = 0
				И Не Итоги.ЕстьСтавкаНольПроцентов, "-", ПечатьДокументовУНФ.ФорматСумм(
				Итоги.СуммаНДС, , "0,00")));
			ДанныеПечати.Вставить("ИтоговаяСумма", ПечатьДокументовУНФ.ФорматСумм(Итоги.Всего));

			ОбластьИтого.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтого);

		КонецЕсли;
		
		// Итоговая скидка по документу
		Если Итоги.ЕстьСкидки Тогда

			ОбластьСкидкаПоДокументу = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "СкидкаПоДокументу", "",
				Ошибки);
			Если ОбластьСкидкаПоДокументу <> Неопределено Тогда

				ДанныеПечати.Вставить("ИтоговаяСуммаСкидки", ПечатьДокументовУНФ.ФорматСумм(
					Итоги.СкидкаПоДокументу));
				ОбластьСкидкаПоДокументу.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьСкидкаПоДокументу);

			КонецЕсли;

		КонецЕсли;
		
		// СуммаПрописью
		ОбластьСуммаПрописью = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтоговаяСтрока", "", Ошибки);
		Если ОбластьСуммаПрописью <> Неопределено Тогда

			ИтоговаяСтрока = НСтр("ru ='Всего наименований %1, на сумму %2 (%3)'");
			ФорматированнаяСуммаВсего = ПечатьДокументовУНФ.ФорматСумм(Итоги.Всего,
				ДанныеОбъекта.ВалютаДокумента);
			СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Итоги.Всего,
				ДанныеОбъекта.ВалютаДокумента);
			ДанныеПечати.Вставить("ИтоговаяСтрока", СтрШаблон(ИтоговаяСтрока, Итоги.Количество,
				ФорматированнаяСуммаВсего, СуммаПрописью));
			ОбластьСуммаПрописью.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);

		КонецЕсли;
		
		//Подписи
		ИмяОбласти = ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да, "ПодписиСФаксимиле",
			"ПодписиБезФаксимиле");
		ОбластьПодписи = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, , Ошибки);
		Если ОбластьПодписи <> Неопределено Тогда

			ОбластьПодписи.Параметры.Заполнить(ДанныеОбъекта);

			Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда

				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя картинки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("ФаксимилеКладовщика", "ФаксимилеКладовщика");
				ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФаксимилеПечати");

				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластьПодписи, ДанныеОбъекта, ПодписиИФаксимиле,
					Ошибки);

			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластьПодписи);

		КонецЕсли;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати,
			ДанныеОбъекта.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

