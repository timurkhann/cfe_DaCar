#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УКО_ФормыКлиентСервер_Заголовок(ЭтаФорма, НСтр("ru = 'Вставка предопределенного в текст запроса'; en = 'Insert predefined in query text'"));
	
	КодЯзыкаПрограммирования = ОбъектОбработки().УКО_ОбщегоНазначения_КодЯзыкаПрограммирования();
	
	СписокВыбораВид = Элементы.Вид.СписокВыбора;
	СписокВыбораВид.Добавить("", "<...>");
	СписокВыбораВид.Добавить(ВидЗначение(), НСтр("ru = 'ЗНАЧЕНИЕ(<?>)'; en = 'VALUE(<?>)'"));
	СписокВыбораВид.Добавить(ВидСсылка(), НСтр("ru = 'ССЫЛКА <?>'; en = 'REF <?>'"));
	
	Вид = ВидЗначение();
	
	ОбъектОбработки().УКО_Формы_ОбновитьСписокВыбораТипОбъекта(Элементы.ТипОбъекта, КодЯзыкаПрограммирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЭлементыУправления();
	ОбновитьРезультат();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	
	ИмяОбъекта = "";
	ИмяПредопределенного = "";
	
	ОбновитьСписокВыбораИмяОбъекта();
	ОбновитьЭлементыУправления();
	ОбновитьРезультат();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяОбъектаПриИзменении(Элемент)
	
	ИмяПредопределенного = "";
	
	ОбновитьЭлементыУправления();
	Если УКО_МетаданныеКлиентСервер_ОбъектCПредопределенными(ТипОбъекта) Тогда
		ОбновитьСписокВыбораПредопределенные();
	КонецЕсли;
	
	ОбновитьРезультат();

КонецПроцедуры

&НаКлиенте
Процедура ИмяПредопределенногоПриИзменении(Элемент)
	
	ОбновитьРезультат();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Закрыть (Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьЭлементыУправления()
	
	Элементы.ИмяОбъекта.Доступность = ЗначениеЗаполнено(ТипОбъекта);
	Элементы.ИмяПредопределенного.Доступность = (Вид = ВидЗначение()) И ЗначениеЗаполнено(ИмяОбъекта)
												И УКО_МетаданныеКлиентСервер_ОбъектCПредопределенными(ТипОбъекта);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокВыбораИмяОбъекта()
	
	СписокВыбора = Элементы.ИмяОбъекта.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если ЗначениеЗаполнено(ТипОбъекта) Тогда
		
		Для Каждого ОбъектМетаданных Из Метаданные[ОбъектОбработки().УКО_Метаданные_ИмяКоллекции(ТипОбъекта, КодЯзыкаПрограммирования)] Цикл 
			СписокВыбора.Добавить(ОбъектМетаданных.Имя);
		КонецЦикла;
		
		СписокВыбора.СортироватьПоЗначению();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокВыбораПредопределенные()
	
	СписокВыбора = Элементы.ИмяПредопределенного.СписокВыбора;
	
	Если УКО_МетаданныеКлиентСервер_ЭтоОбъектПеречисление(ТипОбъекта) Тогда
		
		СписокВыбора.Очистить();
		
		Для Каждого ОбъектМетаданных Из Метаданные.Перечисления[ИмяОбъекта].ЗначенияПеречисления Цикл 
			СписокВыбора.Добавить(ОбъектМетаданных.Имя);
		КонецЦикла;
		
	Иначе
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Таблица.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
		|ИЗ
		|	" + ТипОбъекта + "." + ИмяОбъекта + " КАК Таблица
		|ГДЕ
		|	Таблица.Предопределенный
		|УПОРЯДОЧИТЬ ПО
		|	ИмяПредопределенныхДанных");
		
		СписокВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИмяПредопределенныхДанных"));
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРезультат()

	Результат = ТипОбъекта;
	Если ЗначениеЗаполнено(ИмяОбъекта) Тогда
		Результат = Результат + "." + ИмяОбъекта;
	КонецЕсли;
	
	Если (Вид = ВидЗначение()) Тогда
		
		Если ЗначениеЗаполнено(ИмяПредопределенного) Тогда
			Результат = Результат + "." + ИмяПредопределенного;
		Иначе
			Если ЗначениеЗаполнено(ИмяОбъекта) Тогда
				Результат = Результат + НСтр("ru = '.ПустаяСсылка'; en = '.EmptyRef'", КодЯзыкаПрограммирования);
			КонецЕсли;
		КонецЕсли;
		
		Результат = СтрШаблон(НСтр("ru = 'ЗНАЧЕНИЕ(%1)'; en = 'VALUE(%1)'", КодЯзыкаПрограммирования), Результат);
		
	ИначеЕсли (Вид = ВидСсылка()) Тогда
		
		Результат = СтрШаблон(НСтр("ru = 'ССЫЛКА %1'; en = 'REF %1'", КодЯзыкаПрограммирования), Результат);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	
	ОбновитьЭлементыУправления();
	ОбновитьРезультат();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВидСсылка()
	Возврат "ССЫЛКА";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВидЗначение()
	Возврат "ЗНАЧЕНИЕ";
КонецФункции

#КонецОбласти


&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает по объекту метаданных доступны ли для него предопределенные элементы
//
// Параметры:
//   ИмяОбъекта - Строка - Имя объекта метаданных
//
// Возвращаемое значение:
//   Булево - Истина, доступны предопределенные элементы
//
Функция УКО_МетаданныеКлиентСервер_ОбъектCПредопределенными(ИмяОбъекта) Экспорт
	
	Возврат ИмяОбъекта = "Справочник" 
				ИЛИ ИмяОбъекта = "Catalog"
				ИЛИ УКО_МетаданныеКлиентСервер_ЭтоОбъектПеречисление(ИмяОбъекта)
				ИЛИ ИмяОбъекта = "ПланВидовХарактеристик"
				ИЛИ ИмяОбъекта = "ChartOfCharacteristicTypes"
				ИЛИ ИмяОбъекта = "ПланСчетов"
				ИЛИ ИмяОбъекта = "ChartOfAccounts"
				ИЛИ ИмяОбъекта = "ПланВидовРасчета"
				ИЛИ ИмяОбъекта = "ChartOfCalculationTypes";

КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Определяет этот объект перечисление
//
// Параметры:
//   ИмяОбъекта - Строка - Объект метаданных
//
// Возвращаемое значение:
//   Булево - Истина, это имя перечисление
//
Функция УКО_МетаданныеКлиентСервер_ЭтоОбъектПеречисление(ИмяОбъекта) Экспорт
	
	Возврат ИмяОбъекта = "Перечисление" 
				ИЛИ ИмяОбъекта = "Enum";

КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает код английского языка
// Возвращаемое значение:
//   Строка	- Код английского языка
//
Функция УКО_ОбщегоНазначенияКлиентСервер_КодЯзыкаАнглийский() Экспорт
	Возврат "en";
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает код русского языка
// Возвращаемое значение:
//   Строка	- Код русского языка
//
Функция УКО_ОбщегоНазначенияКлиентСервер_КодЯзыкаРусский() Экспорт
	Возврат "ru";
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает доступные типы объекта
//
// Параметры:
//   КодЯзыка - Строка - Код языка
//
// Возвращаемое значение:
//   Массив - Строки доступных типов объектов
//
Функция УКО_МетаданныеКлиентСервер_ДоступныеТипыОбъекта(КодЯзыка = "ru") Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(НСтр("ru = 'Справочник'; en = 'Catalog'", КодЯзыка));
	Результат.Добавить(НСтр("ru = 'Документ'; en = 'Document'", КодЯзыка));
	Результат.Добавить(НСтр("ru = 'Перечисление'; en = 'Enum'", КодЯзыка));
	Результат.Добавить(НСтр("ru = 'ПланВидовХарактеристик'; en = 'ChartOfCharacteristicTypes'", КодЯзыка));
	Результат.Добавить(НСтр("ru = 'ПланСчетов'; en = 'ChartOfAccounts'", КодЯзыка));
	Результат.Добавить(НСтр("ru = 'ПланВидовРасчета'; en = 'ChartOfCalculationTypes'", КодЯзыка));
	Результат.Добавить(НСтр("ru = 'ПланОбмена'; en = 'ExchangePlan'", КодЯзыка));
	Результат.Добавить(НСтр("ru = 'БизнесПроцесс'; en = 'BusinessProcess'", КодЯзыка));
	Результат.Добавить(НСтр("ru = 'Задача'; en = 'Task'", КодЯзыка));
	
	Возврат Результат;
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Обновляет заголовок формы
//
// Параметры:
//  Форма - Форма - Форма
//  Заголовок - Строка - Заголовок формы
//  Дополнение - Булево - Дополнять заголовок названием расширения
//
Процедура УКО_ФормыКлиентСервер_Заголовок(Форма, Заголовок, Дополнение = Ложь) Экспорт
	
	НовыйЗаголовок = Заголовок;
	
	Если Дополнение Тогда
		НовыйЗаголовок = НовыйЗаголовок + " : " + УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения();
	КонецЕсли;
	
	Форма.Заголовок = НовыйЗаголовок;
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Возвращает имя расширения
// Возвращаемое значение:
//   Строка	- Имя расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения() Экспорт 
	
	Возврат НСтр("ru = 'Управляемая консоль отчетов'; en = 'Managed reporting console'");
	
КонецФункции
