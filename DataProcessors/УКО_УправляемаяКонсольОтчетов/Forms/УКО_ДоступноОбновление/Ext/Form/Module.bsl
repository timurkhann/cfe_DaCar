#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекущаяВерсия = УКО_ОбщегоНазначенияКлиентСервер_ВерсияРасширения();
	УКО_ФормыКлиентСервер_Заголовок(ЭтаФорма, СтрШаблон(НСтр("ru = 'Доступно обновление (ваша версия: %1)'; en = 'An update is available (your version: %1)'"), ТекущаяВерсия));
	
	ИсторияВерсий = УКО_ПроверкаОбновленийКлиент_ИсторияВерсий();
	
	Если ИсторияВерсий = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИсторияВерсий = СтрРазделить(ИсторияВерсий, ",");
	ИнформацияОбновленияВерсии = "";
	Для Каждого Версия Из ИсторияВерсий Цикл 
		
		Если Версия <= ТекущаяВерсия Тогда 
			Прервать;
		КонецЕсли;
		
		ИнформацияОбновленияВерсии = ИнформацияОбновленияВерсии + УКО_ПроверкаОбновленийКлиент_ИнформацияПоВерсии(Версия);
		
	КонецЦикла;
	
	ИнформацияОбновления = СтрШаблон("<html><body>%1</body></html>", ИнформацияОбновленияВерсии);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПерейтиНаСтраницуОбновленияНажатие(Элемент)
	
	ПерейтиПоНавигационнойСсылке(УКО_ОбщегоНазначенияКлиентСервер_WebСайтРасширения());
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает WebСайт расширения
// Возвращаемое значение:
//   Строка	- Веб-сайт расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_WebСайтРасширения() Экспорт
	
	Возврат "https://infostart.ru/public/835718/";
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает имя расширения
// Возвращаемое значение:
//   Строка	- Имя расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения() Экспорт 
	
	Возврат НСтр("ru = 'Управляемая консоль отчетов'; en = 'Managed reporting console'");
	
КонецФункции
&НаКлиенте
// Получает информацию по версии (HTML)
//
// Параметры:
//   Версия - Строка - Версия
//
// Возвращаемое значение:
//   Строка - Информации по версии (HTML)
//
Функция УКО_ПроверкаОбновленийКлиент_ИнформацияПоВерсии(Версия) Экспорт
	
	Возврат УКО_ПроверкаОбновленийКлиент_HttpЗапросКСерверу(СтрШаблон("/ver%1.html", Версия));
	
КонецФункции
&НаКлиенте
// Получает историю версий с интернет сервера
//
// Возвращаемое значение:
//   Строка - История версий
//
Функция УКО_ПроверкаОбновленийКлиент_ИсторияВерсий() Экспорт
	
	Возврат УКО_ПроверкаОбновленийКлиент_HttpЗапросКСерверу("/history.txt");
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает версию расширения
// Возвращаемое значение:
//   Строка	- версию расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_ВерсияРасширения() Экспорт
	
	Возврат "3.8.9";
	
КонецФункции
&НаКлиенте

Функция УКО_ПроверкаОбновленийКлиент_HttpЗапросКСерверу(Запрос)
	
	// Тест обновления
	//Путь = "G:\УКО\update";
	//ПолныйПуть = СтрЗаменить(Путь + Запрос, "/", "\");
	//ТекстовыйДокумент = Новый ТекстовыйДокумент;
	//ТекстовыйДокумент.Прочитать(ПолныйПуть);
	//Возврат ТекстовыйДокумент.ПолучитьТекст();
	
	Результат = Неопределено;
	
	Попытка
		
		HTTPСоединение = Новый HTTPСоединение(УКО_ПроверкаОбновленийКлиент_АдресСервера(),,,,,1);
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("User-Agent", "Mozilla/5.0");
		
		HTTPЗапрос = Новый HTTPЗапрос(Запрос, Заголовки);  
		Ответ = HTTPСоединение.Получить(HTTPЗапрос);    
		
		Если Ответ.КодСостояния < 300 Тогда
			Результат = Ответ.ПолучитьТелоКакСтроку();
		КонецЕсли;

	Исключение
		
		НеОбрабатываемИсключение = Истина;
		
	КонецПопытки;
	
	Возврат Результат;
	
	
КонецФункции
&НаКлиенте

Функция УКО_ПроверкаОбновленийКлиент_АдресСервера()
	
	Возврат "q92801lf.beget.tech";
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Обновляет заголовок формы
//
// Параметры:
//  Форма - Форма - Форма
//  Заголовок - Строка - Заголовок формы
//  Дополнение - Булево - Дополнять заголовок названием расширения
//
Процедура УКО_ФормыКлиентСервер_Заголовок(Форма, Заголовок, Дополнение = Ложь) Экспорт
	
	НовыйЗаголовок = Заголовок;
	
	Если Дополнение Тогда
		НовыйЗаголовок = НовыйЗаголовок + " : " + УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения();
	КонецЕсли;
	
	Форма.Заголовок = НовыйЗаголовок;
	
КонецПроцедуры
