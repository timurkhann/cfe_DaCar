#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НесколькоПараметров = (Параметры.Имена.Количество() > 1);
	Заголовок = СтрШаблон(НСтр("ru = 'Заполнение значений параметров: %1'; en = 'Filling in the values of the parameters: %1'"), СтрСоединить(Параметры.Имена, ", "));
	
	ЗаполнитьДерево(Параметры.ДанныеЗаполнения, ДанныеЗаполнения);
	
	УстановитьУсловноеОформление(НесколькоПараметров);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДанныеЗаполнения

&НаКлиенте
Процедура ДанныеЗаполненияПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДанныеЗаполнения.ТекущиеДанные;
	Пометка = ТекущиеДанные.Пометка;
	
	УстановитьПометкиДанныхЗаполнения(ТекущиеДанные, Пометка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ЗначенияПараметров = ЗначенияПараметров(ДанныеЗаполнения);
	
	Если НесколькоПараметров Тогда
		Закрыть(ЗначенияПараметров);
	Иначе 
		
		Для Каждого ЗначениеПараметра Из ЗначенияПараметров Цикл 
			Закрыть(ЗначениеПараметра.Значение);
			Прервать;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДерево(Элементы, СтрокаПриемник)
	
	Для Каждого Элемент Из Элементы Цикл 
		
		НоваяСтрока = СтрокаПриемник.ПолучитьЭлементы().Добавить();
		НоваяСтрока.ТипСтроки = "Перечисление.УКО_ЭлементыДанных.Запрос";
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
		
		Если Элемент.Свойство("Строки") Тогда
			
			ЗаполнитьДерево(Элемент.Строки, НоваяСтрока);
			НоваяСтрока.ТипСтроки = "Перечисление.УКО_ЭлементыДанных.Группа";
			
		Иначе
			
			Для Каждого ЗначениеПараметра Из Элемент.Параметры Цикл 
				
				НоваяСтрокаПараметр = НоваяСтрока.ПолучитьЭлементы().Добавить();
				НоваяСтрокаПараметр.Имя = ЗначениеПараметра.Ключ;
				НоваяСтрокаПараметр.Картинка = БиблиотекаКартинок.Реквизит;
				НоваяСтрокаПараметр.Значение = ЗначениеПараметра.Значение;
				
				Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("Структура") Тогда
					Представление = ЗначениеПараметра.Значение.Представление;
				Иначе 
					Представление = ЗначениеПараметра.Значение;
				КонецЕсли;
				
				НоваяСтрокаПараметр.Представление = Представление;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление(НесколькоПараметров)
	
	УсловноеОформление.Элементы.Очистить();
	
	ОбъектОбработки().УКО_Формы_ДобавитьУсловноеОформление(УсловноеОформление, "ДанныеЗаполненияИмя", Новый Структура("Шрифт", УКО_ОбщегоНазначенияКлиентСервер_ШрифтЖирный120()),
															"ДанныеЗаполнения.Выделение", Истина);
	
	ОбъектОбработки().УКО_Формы_ДобавитьУсловноеОформление(УсловноеОформление, "ДанныеЗаполнения", Новый Структура("Шрифт", УКО_ОбщегоНазначенияКлиентСервер_ШрифтЖирный120()),
															"ДанныеЗаполнения.Пометка", Истина);
			
	ОбъектОбработки().УКО_Формы_ДобавитьУсловноеОформление(УсловноеОформление, "ДанныеЗаполненияПометка", Новый Структура("Отображать", Ложь),
															"ДанныеЗаполнения.ТипСтроки", "Перечисление.УКО_ЭлементыДанных.Группа");
	
	Если Не НесколькоПараметров Тогда
		
		ОбъектОбработки().УКО_Формы_ДобавитьУсловноеОформление(УсловноеОформление, "ДанныеЗаполненияПометка", Новый Структура("Отображать", Ложь),
															"ДанныеЗаполнения.ТипСтроки", "Перечисление.УКО_ЭлементыДанных.Запрос");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиДанныхЗаполнения(Строка, Пометка = Истина, ИсключатьЗапросы = Ложь)
	
	Если ТипЗнч(Строка) <> Тип("ДанныеФормыДерево")
		И Строка.ТипСтроки <> "Перечисление.УКО_ЭлементыДанных.Группа" Тогда 
		
		Если ПустаяСтрока(Строка.ТипСтроки) И Пометка Тогда
			
			Если НесколькоПараметров Тогда
				СнятьПометкуСПараметраДанныхЗаполнения(ДанныеЗаполнения, Строка.Имя);
			Иначе 
				УстановитьПометкиДанныхЗаполнения(ДанныеЗаполнения, Ложь);
			КонецЕсли;
		КонецЕсли;
		
		Если Строка.ТипСтроки = "Перечисление.УКО_ЭлементыДанных.Запрос" Тогда
			Если Не ИсключатьЗапросы  Тогда
				Строка.Пометка = Пометка;
			КонецЕсли;
		Иначе 
			Строка.Пометка = Пометка;
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого ВложеннаяСтрока Из Строка.ПолучитьЭлементы() Цикл 
		 УстановитьПометкиДанныхЗаполнения(ВложеннаяСтрока, Пометка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометкуСПараметраДанныхЗаполнения(Строка, Имя)
	
	Если ТипЗнч(Строка) <> Тип("ДанныеФормыДерево")
		И ПустаяСтрока(Строка.ТипСтроки) 
		И Строка.Имя = Имя Тогда 
		
		Строка.Пометка = Ложь;
		
		// Проверим может это последняя пометка и она не нужна
		Родитель = Строка.ПолучитьРодителя();
		ПометкаРодителя = Ложь;
		Для Каждого СтрокаРодителя Из Родитель.ПолучитьЭлементы() Цикл 
			Если СтрокаРодителя.Пометка Тогда
				ПометкаРодителя = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Родитель.Пометка = ПометкаРодителя;
		
	КонецЕсли;
	
	Для Каждого ВложеннаяСтрока Из Строка.ПолучитьЭлементы() Цикл 
		 СнятьПометкуСПараметраДанныхЗаполнения(ВложеннаяСтрока, Имя);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ЗначенияПараметров(Строка)
	
	ЗначенияПараметров = Новый Соответствие;
	Если ТипЗнч(Строка) <> Тип("ДанныеФормыДерево")
		И ПустаяСтрока(Строка.ТипСтроки) Тогда 
		
		Если Строка.Пометка Тогда
			ЗначенияПараметров.Вставить(Строка.Имя, Строка.Значение);
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого ВложеннаяСтрока Из Строка.ПолучитьЭлементы() Цикл 
		
		Для Каждого ЗначенияПараметровВложенных Из ЗначенияПараметров(ВложеннаяСтрока) Цикл 
			ЗначенияПараметров.Вставить(ЗначенияПараметровВложенных.Ключ, ЗначенияПараметровВложенных.Значение);
		КонецЦикла;
		 
	КонецЦикла;
	
	Возврат ЗначенияПараметров;
	
КонецФункции

#КонецОбласти

&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает шрифт жирный 120%
// Возвращаемое значение:
//   Шрифт - Шрифт
Функция УКО_ОбщегоНазначенияКлиентСервер_ШрифтЖирный120() Экспорт
	Возврат Новый Шрифт(,,Истина,,,,120);
КонецФункции
