#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ПоменятьНовыйИЭталон.Картинка = Элементы.БиблиотекаКартинокУКО_Обменять.Картинка;
	
	УКО_ФормыКлиентСервер_Заголовок(ЭтаФорма, НСтр("ru = 'Настройки сравнения'; en = 'Comparison settings'"));
	
	СписокЗапросов = Параметры.СписокЗапросов;
	СписокСхемКомпоновкиДанных = Параметры.СписокСхемКомпоновкиДанных;
	
	Если Параметры.Свойство("ОбъектЭталон") Тогда
		ПараметрыЗаполнения.Добавить(Параметры.ОбъектЭталон, "ОбъектЭталон");
	КонецЕсли;
	
	Если Параметры.Свойство("ОбъектНовый") Тогда
		ПараметрыЗаполнения.Добавить(Параметры.ОбъектНовый, "ОбъектНовый");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТипОбъектов) Тогда
		ТипОбъектов = Параметры.ТипОбъектов;
	Иначе 
		ТипОбъектов = "Перечисление.УКО_ЭлементыДанных.Запрос";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТипСравнения) Тогда
		ТипСравнения = Параметры.ТипСравнения;
	Иначе 
		ТипСравнения = "Перечисление.УКО_ВариантыСравненияДанных.Результаты";
	КонецЕсли;
	
	// Доступность видимость настроек в зависимости от контекста запуска
	Если Параметры.НеизменяемыеПоля.Свойство("ТипСравнения") Тогда
		Элементы.ТипСравнения.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.НеизменяемыеПоля.Свойство("ТипОбъектов") Тогда
		Элементы.ТипОбъектов.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.НеизменяемыеПоля.Свойство("ОбъектЭталон") Тогда
		Элементы.ОбъектЭталон.Доступность = Ложь;
	КонецЕсли;

	Если Параметры.НеизменяемыеПоля.Свойство("ОбъектНовый") Тогда
		Элементы.ОбъектНовый.Доступность = Ложь;
	КонецЕсли;
	
	ТипСравненияСписокВыбора = Элементы.ТипСравнения.СписокВыбора;
	ТипСравненияСписокВыбора.Добавить("Перечисление.УКО_ВариантыСравненияДанных.Тексты", НСтр("ru = 'Тексты'; en = 'Texts'"));
	ТипСравненияСписокВыбора.Добавить("Перечисление.УКО_ВариантыСравненияДанных.Результаты", НСтр("ru = 'Результаты'; en = 'Results'"));
	
	ТипОбъектовСписок = Элементы.ТипОбъектов.СписокВыбора;
	ТипОбъектовСписок.Добавить("Перечисление.УКО_ЭлементыДанных.Запрос", НСтр("ru = 'Запросы'; en = 'Requests'"));
	ТипОбъектовСписок.Добавить("Перечисление.УКО_ЭлементыДанных.СхемаКомпоновкиДанных", НСтр("ru = 'Схемы компоновки данных'; en = 'Data layout diagrams'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСпискиОбъектовСравнения();
	
	Для Каждого ПараметрЗаполнения Из ПараметрыЗаполнения Цикл 
		
		ЭтаФорма[ПараметрЗаполнения.Представление] = ПараметрЗаполнения.Значение;
		
	КонецЦикла;
	
	ОбновитьЭлементыУправления();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипОбъектовПриИзменении(Элемент)
	
	ОбновитьСпискиОбъектовСравнения();
	ОбновитьЭлементыУправления();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектЭталонПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОбъектНовый) И ОбъектНовый = ОбъектЭталон Тогда
		ОбъектНовый = Неопределено;
		ОбменятьДоступность();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбъектНовыйПриИзменении(Элемент)
	
	Если ОбъектЭталон = ОбъектНовый Тогда
		ОбъектЭталон = Неопределено;
		ОбменятьДоступность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСравненияПриИзменении(Элемент)
	
	ОбновитьЭлементыУправления();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сравнить(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(ОбъектЭталон) ИЛИ Не ЗначениеЗаполнено(ОбъектЭталон) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать объекты сравнения'; en = 'You need to choose the objects of comparison'"),,УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения());
		Отказ = Истина;
	КонецЕсли;
		
	Если Не Отказ Тогда
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ТипСравнения", ТипСравнения);
		ПараметрыОповещения.Вставить("ОбъектЭталон", Новый УникальныйИдентификатор(ОбъектЭталон));
		ПараметрыОповещения.Вставить("ОбъектНовый",  Новый УникальныйИдентификатор(ОбъектНовый));
		
		Закрыть(ПараметрыОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоменятьНовыйИЭталон(Команда)
	
	ВременноеЗначение = ОбъектНовый;
	
	ОбъектНовый = ОбъектЭталон;
	ОбъектЭталон = ВременноеЗначение;
	
	ОбменятьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбменятьДоступность()
	
	ВременнаяДоступность = Элементы.ОбъектНовый.Доступность;
	
	Элементы.ОбъектНовый.Доступность = Элементы.ОбъектЭталон.Доступность;
	Элементы.ОбъектЭталон.Доступность = ВременнаяДоступность;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлементыУправления()
	
	ТипОбъектовПредставление = Элементы.ТипОбъектов.СписокВыбора.НайтиПоЗначению(ТипОбъектов).Представление;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСпискиОбъектовСравнения()
	
	Если ТипОбъектов = "Перечисление.УКО_ЭлементыДанных.Запрос" Тогда
		СписокИсточник = СписокЗапросов;
	ИначеЕсли ТипОбъектов = "Перечисление.УКО_ЭлементыДанных.СхемаКомпоновкиДанных" Тогда
		СписокИсточник = СписокСхемКомпоновкиДанных;
	КонецЕсли;
	
	ОбновитьСписокОбъектовСравнения("ОбъектЭталон", СписокИсточник);
	ОбновитьСписокОбъектовСравнения("ОбъектНовый", СписокИсточник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокОбъектовСравнения(ИмяЭлемента, СписокИсточник)
	
	Элементы[ИмяЭлемента].СписокВыбора.Очистить();
	
	Для Каждого ОбъектСравнения Из СписокИсточник Цикл 
		Элементы[ИмяЭлемента].СписокВыбора.Добавить(ОбъектСравнения.Значение, ОбъектСравнения.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает имя расширения
// Возвращаемое значение:
//   Строка	- Имя расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения() Экспорт 
	
	Возврат НСтр("ru = 'Управляемая консоль отчетов'; en = 'Managed reporting console'");
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Обновляет заголовок формы
//
// Параметры:
//  Форма - Форма - Форма
//  Заголовок - Строка - Заголовок формы
//  Дополнение - Булево - Дополнять заголовок названием расширения
//
Процедура УКО_ФормыКлиентСервер_Заголовок(Форма, Заголовок, Дополнение = Ложь) Экспорт
	
	НовыйЗаголовок = Заголовок;
	
	Если Дополнение Тогда
		НовыйЗаголовок = НовыйЗаголовок + " : " + УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения();
	КонецЕсли;
	
	Форма.Заголовок = НовыйЗаголовок;
	
КонецПроцедуры
