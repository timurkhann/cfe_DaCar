#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	
	УКО_ФормыКлиентСервер_Заголовок(ЭтаФорма, НСтр("ru = 'Анализ исполняемых СКД запросов'; en = 'Analysis of executable DCS requests'"));
	
	ДеревоИсполняемыеЗапросы = ПолучитьИзВременногоХранилища(Параметры.Адрес);
	ИнициализироватьСтрокуДерева(Запросы, ДеревоИсполняемыеЗапросы);

	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗапросы

&НаКлиенте
Процедура ЗапросыПриАктивизацииСтроки(Элемент)
	
	ОбновитьЭлементыУправления();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СравнитьСИсходнымТекстом(Команда)
	
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		
		ТекущиеДанные = Элементы.Запросы.ТекущиеДанные;
		НаименованиеОперации = НСтр("ru = 'Подготовка данных для сравнения'; en = 'Preparing data for comparison'");
		
		ИмяПервогоФайла = ПолучитьИмяВременногоФайла("txt");
		ИмяВторогоФайла = ПолучитьИмяВременногоФайла("txt");
		
		Состояние(НаименованиеОперации,, НСтр("ru = '(1/2) Сохранение файла исходного текста'; en = '(1/2) Saving the source file'"), Элементы.БиблиотекаКартинокУКО_ДлительнаяОперацияАнимация48.Картинка);
		УКО_ОбщегоНазначенияКлиентСервер_СохранитьТекстВФайл(ИмяПервогоФайла, ТекущиеДанные.ИсходныйТекст);
		Состояние(НаименованиеОперации,, НСтр("ru = '(2/2) Сохранение файла текста'; en = '(2/2) Saving text file'"), Элементы.БиблиотекаКартинокУКО_ДлительнаяОперацияАнимация48.Картинка);
		УКО_ОбщегоНазначенияКлиентСервер_СохранитьТекстВФайл(ИмяВторогоФайла, ТекущиеДанные.Текст);
		
		УКО_ФормыКлиент_ПоказатьСравнениеФайлов(ИмяПервогоФайла, ИмяВторогоФайла, СпособСравненияФайлов.ТекстовыйДокумент);
		
	#Иначе
		
		ПоказатьПредупреждение(, НСтр("ru = 'Запуск сравнения возможен только в толстом клиенте.'; en = 'Running the comparison is only possible in a thick client.'"),,УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения());

	#КонецЕсли

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Условия = Новый Массив;
	Условия.Добавить(Новый Структура("Поле, Значение", "Запросы.Текст", ""));
	Условия.Добавить(Новый Структура("Поле, Значение", "Запросы.Объединение", Ложь));

	ОбъектОбработки().УКО_Формы_ДобавитьУсловноеОформлениеГруппой(УсловноеОформление, "ЗапросыИмя", Новый Структура("Шрифт", УКО_ОбщегоНазначенияКлиентСервер_ШрифтЗачеркнутый()), Условия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлементыУправления()
	
	ТекущиеДанные = Элементы.Запросы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СравнитьСИсходнымТекстом.Видимость = (ТекущиеДанные.Текст <> ТекущиеДанные.ИсходныйТекст);
	Текст = ТекущиеДанные.Текст;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьСтрокуДерева(Приемник, Источник)
	
	Для Каждого Строка Из Источник.Строки Цикл 
		
		НоваяСтрока = Приемник.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		Если НоваяСтрока.Объединение Тогда
			НоваяСтрока.Картинка = Элементы.БиблиотекаКартинокУКО_Объединение.Картинка;
		КонецЕсли;
		
		ИнициализироватьСтрокуДерева(НоваяСтрока, Строка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Сохраняет текст в файл
//
// Параметры:
//   ИмяФайла - Строка - Полное имя файла
//   Текст - Строка - Сохраняемый текст
//
Процедура УКО_ОбщегоНазначенияКлиентСервер_СохранитьТекстВФайл(ИмяФайла, Текст) Экспорт 
	
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла);
	ЗаписьТекста.Записать(Текст);
	ЗаписьТекста.Закрыть();
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Возвращает имя расширения
// Возвращаемое значение:
//   Строка	- Имя расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения() Экспорт 
	
	Возврат НСтр("ru = 'Управляемая консоль отчетов'; en = 'Managed reporting console'");
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Обновляет заголовок формы
//
// Параметры:
//  Форма - Форма - Форма
//  Заголовок - Строка - Заголовок формы
//  Дополнение - Булево - Дополнять заголовок названием расширения
//
Процедура УКО_ФормыКлиентСервер_Заголовок(Форма, Заголовок, Дополнение = Ложь) Экспорт
	
	НовыйЗаголовок = Заголовок;
	
	Если Дополнение Тогда
		НовыйЗаголовок = НовыйЗаголовок + " : " + УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения();
	КонецЕсли;
	
	Форма.Заголовок = НовыйЗаголовок;
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Возвращает шрифт зачеркнутый
//
// Возвращаемое значение:
//   Шрифт - Шрифт
//
Функция УКО_ОбщегоНазначенияКлиентСервер_ШрифтЗачеркнутый() Экспорт
	
	Возврат Новый Шрифт(,,,,,Истина,120);
	
КонецФункции
&НаКлиенте
// Показать сравнение файлов
//
// Параметры:
//	ИмяПервогоФайла - Строка - Имя первого файла
//	ИмяВторогоФайла - Строка - Имя второго файла
//	СпособСравнения - СпособСравнения - Способ сравнения
//
Процедура УКО_ФормыКлиент_ПоказатьСравнениеФайлов(ИмяПервогоФайла, ИмяВторогоФайла, СпособСравнения) Экспорт
	
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		
		СравнениеФайлов = Новый СравнениеФайлов;
		СравнениеФайлов.ПервыйФайл = ИмяПервогоФайла;
		СравнениеФайлов.ВторойФайл = ИмяВторогоФайла;
		СравнениеФайлов.СпособСравнения = СпособСравнения;
		
		СравнениеФайлов.ПоказатьРазличияМодально();
		
		НачатьУдалениеФайлов(, ИмяПервогоФайла);
		НачатьУдалениеФайлов(, ИмяВторогоФайла);
		
	#КонецЕсли
	
КонецПроцедуры
