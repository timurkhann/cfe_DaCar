
Процедура ЗаписатьБонусы(ДокументОбъект) Экспорт

	НастройкиКонтрагентов = РегистрыСведений.тм_НастройкиКонтрагентов.Получить(Новый Структура("Контрагент", ДокументОбъект.Контрагент));
	
	Если Не ЗначениеЗаполнено(НастройкиКонтрагентов.БонусныйСчет) Тогда
		Сообщить("Не указан бонусный счет контрагента для начисления!");
		Возврат;
	КонецЕсли; 
	
	ДатаЗаписи = ТекущаяДатаСеанса();
	
	ДокументОбъект.Движения.тм_БонусныеНакопленияПолный.Записывать = Истина;
		
	Если Не ДокументОбъект.Метаданные().ТабличныеЧасти.Найти("Запасы") = Неопределено Тогда
		Для каждого СтрокаЗапасы Из ДокументОбъект.Запасы Цикл
			Движение = ДокументОбъект.Движения.тм_БонусныеНакопленияПолный.Добавить();
			Движение.Период = ДатаЗаписи;
			Движение.Контрагент = ДокументОбъект.Контрагент;
			Движение.БонусныйСчет = НастройкиКонтрагентов.БонусныйСчет;
			Движение.ПроцентНакопления = НастройкиКонтрагентов.НачисляемыйПроцентБонусов;
			Движение.Номенклатура = СтрокаЗапасы.Номенклатура;
			Движение.СуммаНакоплений = СтрокаЗапасы.Сумма * НастройкиКонтрагентов.НачисляемыйПроцентБонусов/100;				
		КонецЦикла;  
	КонецЕсли; 
	
	Если Не ДокументОбъект.Метаданные().ТабличныеЧасти.Найти("Работы") = Неопределено Тогда
		Для каждого СтрокаРаботы Из ДокументОбъект.Работы Цикл
			Если СтрокаРаботы.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				Продолжить;
			КонецЕсли; 
			Движение = ДокументОбъект.Движения.тм_БонусныеНакопленияПолный.Добавить();
			Движение.Период = ДатаЗаписи;
			Движение.Контрагент = ДокументОбъект.Контрагент;
			Движение.БонусныйСчет = НастройкиКонтрагентов.БонусныйСчет;
			Движение.ПроцентНакопления = НастройкиКонтрагентов.НачисляемыйПроцентБонусов;
			Движение.Номенклатура = СтрокаРаботы.Номенклатура;
			Движение.СуммаНакоплений = СтрокаРаботы.Сумма * НастройкиКонтрагентов.НачисляемыйПроцентБонусов/100;				
		КонецЦикла;  
	КонецЕсли; 

КонецПроцедуры
