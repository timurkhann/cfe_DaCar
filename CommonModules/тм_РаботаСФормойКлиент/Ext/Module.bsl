
// Отключить видимость элементов.
// 
// Параметры:
//  Форма Форма
//  ИмяЭлемента Имя элемента
Процедура ОтключитьВидимостьЭлементов(Форма, ИмяЭлемента) Экспорт
	
	Попытка		
		Если ИмяЭлемента = "ФормаОбщаяКомандатм_Чат" Тогда
			Если Форма.ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаСписка" Тогда
				НаименованиеПанели = "КоманднаяПанель";
				ФормаОбщаяКомандатм_Чат = Форма.Элементы[НаименованиеПанели].ПодчиненныеЭлементы.ГруппаГлобальныеКомандыЗаказПокупателя.ПодчиненныеЭлементы.Найти(ИмяЭлемента);
			ИначеЕсли  Форма.ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаСпискаЗаказНаряда" Тогда
				НаименованиеПанели = "ГруппаКоманднаяПанель";	
				ФормаОбщаяКомандатм_Чат = Форма.Элементы[НаименованиеПанели].ПодчиненныеЭлементы.ГруппаГлобальныеКомандыЗаказПокупателя.ПодчиненныеЭлементы.Найти(ИмяЭлемента);
			ИначеЕсли Форма.ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаЗаказНаряда" Тогда
				НаименованиеПанели = "ГруппаГлобальныеКоманды";	
				ФормаОбщаяКомандатм_Чат = Форма.КоманднаяПанель.ПодчиненныеЭлементы[НаименованиеПанели].ПодчиненныеЭлементы.Найти(ИмяЭлемента);
			ИначеЕсли Форма.ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаДокумента" Тогда
				НаименованиеПанели = "КомандыГлобальные";	
				ФормаОбщаяКомандатм_Чат = Форма.Элементы[НаименованиеПанели].ПодчиненныеЭлементы.Найти(ИмяЭлемента);			
			КонецЕсли; 
			
			Если ФормаОбщаяКомандатм_Чат <> Неопределено Тогда
				ФормаОбщаяКомандатм_Чат.Видимость	= Ложь;	
			КонецЕсли; 	
				
		КонецЕсли; 
	Исключение
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

Процедура ПриНачалеРаботыСистемы() Экспорт
	
	Спс = Новый СписокЗначений; 
	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПриНачалеРаботыСистемыЗавершение", тм_РаботаСФормойКлиент, Новый Структура("Список", Спс)));

КонецПроцедуры
#Область ВосстанавливатьРанееОткрытыеВкладки
	
Процедура ПриНачалеРаботыСистемыЗавершение(ИмяКаталогаВременныхФайлов, ДополнительныеПараметры) Экспорт
	
	Список = ДополнительныеПараметры.Список; 
	СтрокаСоединенияИнформационнойБазы = СтрокаСоединенияИнформационнойБазы() ;
	ИмяБазы = Макс(НСтр(СтрокаСоединенияИнформационнойБазы, "Ref"), НСтр(СтрокаСоединенияИнформационнойБазы, "File"));
	ИмяФайла = ИмяКаталогаВременныхФайлов + "Okna_" + ИмяБазы + ".txt";  
	ИмяКаталогаВременныхФайловОкна = ИмяФайла;
	Файл = Новый Файл(ИмяФайла);
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПриНачалеРаботыСистемыЗавершениеЗавершение", тм_РаботаСФормойКлиент, Новый Структура("ИмяФайла, Список", ИмяФайла, Список)));
	
КонецПроцедуры

Процедура ПриНачалеРаботыСистемыЗавершениеЗавершение(Существует, ДопПараметры) Экспорт
	
	ИмяФайла = ДопПараметры.ИмяФайла;
	Список = ДопПараметры.Список;
	
	Если Существует Тогда		
		//не будем выводить в список уже открытые окна
		ОкнаПриложения = ПолучитьОкна();
		СписокОткрытых = Новый СписокЗначений;
		Для Каждого ОкноПриложения Из ОкнаПриложения Цикл
			Ссылка = ОкноПриложения.ПолучитьНавигационнуюСсылку(); 
			Если Не ПустаяСтрока(Ссылка) тогда
				Зн = СписокОткрытых.НайтиПоЗначению(Ссылка);
				Если Зн = Неопределено тогда
					СписокОткрытых.Добавить(Ссылка);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;  

		Текст = Новый ЧтениеТекста(ИмяФайла);	
		Стр = Текст.ПрочитатьСтроку();
		Пока Стр <> Неопределено
			И Не ПустаяСтрока(Стр) Цикл // строки читаются до символа перевода строки
			Значение = Лев(Стр, Найти(Стр,"###")-1);
			Если СписокОткрытых.НайтиПоЗначению(Значение) = Неопределено тогда
				Представление = Сред(Стр, СтрНайти(Стр, "###")+3);
				Список.Добавить(Значение, Представление, Истина, БиблиотекаКартинок.Органайзер);  
			КонецЕсли;
			Стр = Текст.ПрочитатьСтроку();
		КонецЦикла;
		
		Если ТипЗнч(Список) = Тип("СписокЗначений") 
			И Список.Количество() > 0 тогда
			Список.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("Открыть2Завершение", ЭтотОбъект, Новый Структура("Список", Список)), "Выберите открытые формы прошлого сеанса");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура Открыть2Завершение(Список, ДополнительныеПараметры) Экспорт
	
	Если Список <> Неопределено тогда
		Для каждого Элемент из Список Цикл
			Если Элемент.Пометка Тогда
				ПерейтиПоНавигационнойСсылке(Элемент.Значение);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы() Экспорт

	Если ПустаяСтрока(ИмяКаталогаВременныхФайловОкна) Тогда
		Возврат;
	КонецЕсли;
	
	ОкнаПриложения = ПолучитьОкна();
	Список = Новый СписокЗначений;
	Для каждого ОкноПриложения Из ОкнаПриложения Цикл
		Ссылка = ОкноПриложения.ПолучитьНавигационнуюСсылку(); 
		если Не ПустаяСтрока(Ссылка) тогда
			Зн = Список.НайтиПоЗначению(Ссылка);
			Если Зн = Неопределено тогда
				Список.Добавить(Ссылка, ОкноПриложения.Заголовок);
			Иначе
				Зн.Значение = Ссылка;
				Зн.Представление = ОкноПриложения.Заголовок;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	Текст = Новый ТекстовыйДокумент;
	Для каждого Значение из Список Цикл
		Текст.ДобавитьСтроку(Значение.Значение + "###" + Значение.Представление);
	КонецЦикла;
	
	Текст.Записать(ИмяКаталогаВременныхФайловОкна);	

КонецПроцедуры

#КонецОбласти 
