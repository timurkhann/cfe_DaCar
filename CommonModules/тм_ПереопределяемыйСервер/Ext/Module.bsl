
// Переопределяет текст запроса динамического списка.
// 
// Параметры:
//  ИмяОбъекта - Строка - Имя объекта
//  ТекстЗапросаПереопределяемый - Строка - Текст запроса переопределяемый
// 
// Возвращаемое значение:
//  Строка - Текст запроса динамического списка
Функция ПереопределитьТекстЗапросаДинамическогоСписка(ИмяОбъекта, ТекстЗапросаПереопределяемый = "") Экспорт
	
	Если ИмяОбъекта = "Номенклатура" Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ
			|	НоменклатураПереопределяемый.Ссылка КАК Ссылка,
			|	НоменклатураПереопределяемый.Ссылка КАК Номенклатура,
			|	НоменклатураПереопределяемый.ПометкаУдаления КАК ПометкаУдаления,
			|	ЛОЖЬ КАК ПрямойАналог,
			|	НоменклатураПереопределяемый.Код КАК Код,
			|	НоменклатураПереопределяемый.Наименование КАК Наименование,
			|	НоменклатураПереопределяемый.Артикул КАК Артикул,
			|	НоменклатураПереопределяемый.ДатаИзменения КАК ДатаИзменения,
			|	ЕСТЬNULL(НоменклатураПереопределяемый.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
			|	1 КАК Коэффициент,
			|	НоменклатураПереопределяемый.МетодОценки КАК МетодОценки,
			|	ВЫРАЗИТЬ(НоменклатураПереопределяемый.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеПолное,
			|	НоменклатураПереопределяемый.НаправлениеДеятельности КАК НаправлениеДеятельности,
			|	НоменклатураПереопределяемый.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
			|	НоменклатураПереопределяемый.Поставщик КАК Поставщик,
			|	НоменклатураПереопределяемый.Склад КАК Склад,
			|	НоменклатураПереопределяемый.СпособПополнения КАК СпособПополнения,
			|	НоменклатураПереопределяемый.СрокПополнения КАК СрокПополнения,
			|	НоменклатураПереопределяемый.ВидСтавкиНДС КАК ВидСтавкиНДС,
			|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДСНоменклатуры,
			|	НоменклатураПереопределяемый.СчетУчетаЗапасов КАК СчетУчетаЗапасов,
			|	НоменклатураПереопределяемый.СчетУчетаЗатрат КАК СчетУчетаЗатрат,
			|	НоменклатураПереопределяемый.ТипНоменклатуры КАК ТипНоменклатуры,
			|	НоменклатураПереопределяемый.Ячейка КАК Ячейка,
			|	НоменклатураПереопределяемый.ЦеноваяГруппа КАК ЦеноваяГруппа,
			|	НоменклатураПереопределяемый.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики,
			|	НоменклатураПереопределяемый.ИспользоватьПартии КАК ИспользуетсяРезервирование,
			|	НоменклатураПереопределяемый.ИспользоватьПартии КАК ИспользоватьПартии,
			|	НоменклатураПереопределяемый.Недействителен КАК Недействителен,
			|	НоменклатураПереопределяемый.СрокИсполненияЗаказа КАК СрокИсполненияЗаказа,
			|	НоменклатураПереопределяемый.НормаВремени КАК НормаВремени,
			|	НоменклатураПереопределяемый.ФиксированнаяСтоимость КАК ФиксированнаяСтоимость,
			|	НоменклатураПереопределяемый.СтранаПроисхождения КАК СтранаПроисхождения,
			|	НоменклатураПереопределяемый.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции,
			|	НоменклатураПереопределяемый.ИмпортнаяАлкогольнаяПродукция КАК ИмпортнаяАлкогольнаяПродукция,
			|	НоменклатураПереопределяемый.ПроизводительИмпортерАлкогольнойПродукции КАК ПроизводительИмпортерАлкогольнойПродукции,
			|	НоменклатураПереопределяемый.Вес КАК Вес,
			|	НоменклатураПереопределяемый.Объем КАК Объем,
			|	НоменклатураПереопределяемый.ОбъемДАЛ КАК ОбъемДАЛ,
			|	ПОДСТРОКА(НоменклатураПереопределяемый.Комментарий, 1, 1000) КАК Комментарий,
			|	ВЫБОР
			|		КОГДА НоменклатураПереопределяемый.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
			|			ТОГДА 0
			|		ИНАЧЕ 2
			|	КОНЕЦ + ВЫБОР
			|		КОГДА НоменклатураПереопределяемый.ИспользоватьХарактеристики
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ + ВЫБОР
			|		КОГДА НоменклатураПереопределяемый.ПометкаУдаления
			|			ТОГДА 4
			|		ИНАЧЕ 0
			|	КОНЕЦ + ВЫБОР
			|		КОГДА НоменклатураПереопределяемый.ЭтоНабор
			|			ТОГДА 8
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ВариантКартинки,
			|	0 КАК Цена,
			|	ЕСТЬNULL(Остатки.Количество, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(Остатки.Резерв, 0) КАК Резерв,
			|	НоменклатураПереопределяемый.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
			|	НоменклатураПереопределяемый.ГарантийныйСрок КАК ГарантийныйСрок,
			|	НоменклатураПереопределяемый.ВыписыватьГарантийныйТалон КАК ВыписыватьГарантийныйТалон,
			|	НоменклатураПереопределяемый.ЭтоНабор КАК ЭтоНабор,
			|	0 КАК ЕстьФайлы,
			|	0 КАК КартинкаОстатки,
			|	0 КАК КартинкаКорзина,
			|	НоменклатураПереопределяемый.ПроверятьЗаполнениеПартий КАК ПроверятьЗаполнениеПартий,
			|	НоменклатураПереопределяемый.ПроверятьЗаполнениеХарактеристики КАК ПроверятьЗаполнениеХарактеристики,
			|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, """") КАК тм_Производитель
			|ИЗ
			|	Справочник.Номенклатура КАК НоменклатураПереопределяемый
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ОстаткиТоваров.Номенклатура КАК Номенклатура,
			|			СУММА(ОстаткиТоваров.Количество) КАК Количество,
			|			СУММА(ОстаткиТоваров.Резерв) КАК Резерв
			|		ИЗ
			|			РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
			|		
			|		СГРУППИРОВАТЬ ПО
			|			ОстаткиТоваров.Номенклатура) КАК Остатки
			|		ПО НоменклатураПереопределяемый.Ссылка = Остатки.Номенклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
			|		ПО (НоменклатураДополнительныеРеквизиты.Ссылка = НоменклатураПереопределяемый.Ссылка)
			|			И (НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоПроизводитель)";
		
	ИначеЕсли ИмяОбъекта = "ФормаСпискаЗаказНаряда" Тогда
		
		// Выведено поле Автомобиль		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапросаПереопределяемый);
		
		ПакетЗапросов = СхемаЗапроса.ПакетЗапросов[0];
			
		Оператор = СхемаЗапроса.ПакетЗапросов[0].Операторы[0];
		
		//Добавляем запрос
		ИсточникСообщения = Оператор.Источники.Добавить("РегистрСведений.тм_СообщенияПользователям.СрезПоследних","СообщенияПользователям");
		ИсточникСообщения.Соединения.Удалить(0);
		Оператор.Источники[0].Соединения.Добавить(ИсточникСообщения, "ДокументЗаказПокупателя.Ссылка = СообщенияПользователям.Документ");
				
		Оператор.ВыбираемыеПоля.Добавить("ДокументЗаказПокупателя.тм_Автомобиль");
		Оператор.ВыбираемыеПоля.Добавить("ДокументЗаказПокупателя.Контрагент.КонтактноеЛицо.НомерТелефонаДляПоиска");
		Оператор.ВыбираемыеПоля.Добавить("ВЫБОР КОГДА СообщенияПользователям.Документ ЕСТЬ NULL ТОГДА 1 ИНАЧЕ 0 КОНЕЦ");
		
		// Установим всевдонимы
		Колонка_тм_Автомобиль = ПакетЗапросов.Колонки.Найти("тм_Автомобиль");
		Колонка_тм_Автомобиль.Псевдоним = "Автомобиль";
		
		Колонка_НомерТелефона = ПакетЗапросов.Колонки.Найти("КонтрагентКонтактноеЛицоНомерТелефонаДляПоиска");
		Колонка_НомерТелефона.Псевдоним = "НомерТелефона";
		
		Колонка_ВедетсяЧат = ПакетЗапросов.Колонки.Найти("Поле1");
		Колонка_ВедетсяЧат.Псевдоним = "Чат";
		
		ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		
	ИначеЕсли ИмяОбъекта = "ФормаСпискаРасходнаяНакладная" Тогда
		
		// Выведено поле Состояние
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапросаПереопределяемый);
		
		ПакетЗапросов = СхемаЗапроса.ПакетЗапросов[0];
		Оператор = СхемаЗапроса.ПакетЗапросов[0].Операторы[0];
		Оператор.ВыбираемыеПоля.Добавить("ДокументРасходнаяНакладная.тм_СостояниеРасходнойНакладной");
		Оператор.ВыбираемыеПоля.Добавить("ДокументРасходнаяНакладная.Контрагент.КонтактноеЛицо.НомерТелефонаДляПоиска");
		
		// Установим всевдонимы
		Колонка_тм_СостояниеРасходнойНакладной = ПакетЗапросов.Колонки.Найти("тм_СостояниеРасходнойНакладной");
		Колонка_тм_СостояниеРасходнойНакладной.Псевдоним = "СостояниеРасходнойНакладной";
		
		Колонка_НомерТелефона = ПакетЗапросов.Колонки.Найти("КонтрагентКонтактноеЛицоНомерТелефонаДляПоиска");
		Колонка_НомерТелефона.Псевдоним = "НомерТелефона";
		
		ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		
	ИначеЕсли ИмяОбъекта = "Обработка.тм_Чат.Форма.ФормаПросмотраСообщения" Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ
			|	тм_СообщенияПользователям.ИдентификаторСообщения
			|ИЗ
			|	РегистрСведений.тм_СообщенияПользователям КАК тм_СообщенияПользователям
			|ГДЕ
			|	тм_СообщенияПользователям.ИдентификаторСообщения = &ИдентификаторСообщения";
				
	КонецЕсли; 
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПереопределитьТекстЗапросаДинамическогоСписка()

Процедура ПереопределитьПараметрыВыбора(Форма) Экспорт

	ПолеФормыНоменлатура = Форма.Элементы.Работы.ПодчиненныеЭлементы.Найти("ЗНРаботыНоменклатура");
	
	Если ПолеФормыНоменлатура <> Неопределено Тогда
		
		НовыйМассив = Новый Массив; 
		мПараметрыВыбора = Форма.Элементы.Работы.ПодчиненныеЭлементы.ЗНРаботыНоменклатура.ПараметрыВыбора;
		
		// Очистить параметры, иначе порядок остается прежним
		Форма.Элементы.Работы.ПодчиненныеЭлементы.ЗНРаботыНоменклатура.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
		
		Для каждого мПараметрВыбор Из мПараметрыВыбора Цикл
			
			Если мПараметрВыбор.Имя = "Отбор.ТипНоменклатуры" Тогда
				
				МассивТипов = Новый Массив; 
				
				МассивТипов.Добавить(Перечисления.ТипыНоменклатуры.Работа);
				МассивТипов.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
				
				НовыеЗначения = Новый ФиксированныйМассив(МассивТипов);
				
				НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипНоменклатуры", НовыеЗначения);
				
				НовыйМассив.Добавить(НовыйПараметр);
				
				Продолжить;				
			КонецЕсли;
			
			НовыйПараметр = Новый ПараметрВыбора(мПараметрВыбор.Имя, мПараметрВыбор.Значение);
			
			НовыйМассив.Добавить(НовыйПараметр);
			
		КонецЦикла;  	
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Форма.Элементы.Работы.ПодчиненныеЭлементы.ЗНРаботыНоменклатура.ПараметрыВыбора = НовыеПараметры;
		
	КонецЕсли;
	
КонецПроцедуры
